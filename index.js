const tcp = require('../../tcp');
const instance_skel = require('../../instance_skel');
var actions = require('./actions');
let debug;
let log;

class instance extends instance_skel {

	constructor(system, id, config) {
		super(system, id, config)

		this.null_packet = Buffer.from([0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00]);
		this.null_packet_cmd = Buffer.from([0x08, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00]);
		this.disconnect_packet = Buffer.from([0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x08, 0x00, 0x01, 0x00, 0x00, 0x00]);

		this.pgm_in_src;
		this.pvw_in_src;
		this.key1_in_src;
		this.key2_in_src;
		this.key3_in_src;
		this.key4_in_src;
		this.pip_in_src;
		this.dsk1_in_src;
		this.dsk2_in_src;
		this.aux1_in_src;
		this.aux2_in_src;
		this.aux3_in_src;
		this.aux4_in_src;
		this.me_dur;
		this.dsk_dur;
		this.ftb_dur;
		this.key1_pgm_state;
		this.key1_pvw_state;
		this.key2_pgm_state;
		this.key2_pvw_state;
		this.dsk1_pgm_state;
		this.dsk1_pvw_state;

		Object.assign(this, {
			...actions
		});
		this.CHOICES_PORT = [
			{ id: '5001', label: '5001' },
			{ id: '5003', label: '5003' },
			{ id: '5005', label: '5005' },
			{ id: '5007', label: '5007' },
		];


		////3200/////

		// Switch 3200 Program Bus
		this.CHOICES_SWITCH_PGM_3200 = [
			{ id: '0', label: 'Black', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x94, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00]) },
			{ id: '1', label: 'In 1', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x94, 0x00, 0x02, 0x00, 0x01, 0x00, 0x00, 0x00]) },
			{ id: '2', label: 'In 2', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x94, 0x00, 0x02, 0x00, 0x02, 0x00, 0x00, 0x00]) },
			{ id: '3', label: 'In 3', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x94, 0x00, 0x02, 0x00, 0x03, 0x00, 0x00, 0x00]) },
			{ id: '4', label: 'In 4', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x94, 0x00, 0x02, 0x00, 0x04, 0x00, 0x00, 0x00]) },
			{ id: '5', label: 'In 5', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x94, 0x00, 0x02, 0x00, 0x05, 0x00, 0x00, 0x00]) },
			{ id: '6', label: 'In 6', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x94, 0x00, 0x02, 0x00, 0x06, 0x00, 0x00, 0x00]) },
			{ id: '7', label: 'In 7', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x94, 0x00, 0x02, 0x00, 0x07, 0x00, 0x00, 0x00]) },
			{ id: '8', label: 'In 8', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x94, 0x00, 0x02, 0x00, 0x08, 0x00, 0x00, 0x00]) },
			{ id: '9', label: 'In 9', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x94, 0x00, 0x02, 0x00, 0x09, 0x00, 0x00, 0x00]) },
			{ id: '10', label: 'In 10', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x94, 0x00, 0x02, 0x00, 0x0a, 0x00, 0x00, 0x00]) },
			{ id: '11', label: 'In 11', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x94, 0x00, 0x02, 0x00, 0x0b, 0x00, 0x00, 0x00]) },
			{ id: '12', label: 'In 12', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x94, 0x00, 0x02, 0x00, 0x0c, 0x00, 0x00, 0x00]) },
			{ id: '19', label: 'Still 1', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x94, 0x00, 0x02, 0x00, 0x13, 0x00, 0x00, 0x00]) },
			{ id: '20', label: 'Still 2', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x94, 0x00, 0x02, 0x00, 0x14, 0x00, 0x00, 0x00]) },
			{ id: '21', label: 'Flex', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x94, 0x00, 0x02, 0x00, 0x15, 0x00, 0x00, 0x00]) },
			{ id: '17', label: 'Matte', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x94, 0x00, 0x02, 0x00, 0x11, 0x00, 0x00, 0x00]) },
			{ id: '18', label: 'Bars', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x94, 0x00, 0x02, 0x00, 0x12, 0x00, 0x00, 0x00]) },
		];

		// Switch 3200 Preview Bus
		this.CHOICES_SWITCH_PVW_3200 = [
			{ id: '0', label: 'Black', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x95, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00]) },
			{ id: '1', label: 'In 1', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x95, 0x00, 0x02, 0x00, 0x01, 0x00, 0x00, 0x00]) },
			{ id: '2', label: 'In 2', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x95, 0x00, 0x02, 0x00, 0x02, 0x00, 0x00, 0x00]) },
			{ id: '3', label: 'In 3', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x95, 0x00, 0x02, 0x00, 0x03, 0x00, 0x00, 0x00]) },
			{ id: '4', label: 'In 4', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x95, 0x00, 0x02, 0x00, 0x04, 0x00, 0x00, 0x00]) },
			{ id: '5', label: 'In 5', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x95, 0x00, 0x02, 0x00, 0x05, 0x00, 0x00, 0x00]) },
			{ id: '6', label: 'In 6', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x95, 0x00, 0x02, 0x00, 0x06, 0x00, 0x00, 0x00]) },
			{ id: '7', label: 'In 7', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x95, 0x00, 0x02, 0x00, 0x07, 0x00, 0x00, 0x00]) },
			{ id: '8', label: 'In 8', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x95, 0x00, 0x02, 0x00, 0x08, 0x00, 0x00, 0x00]) },
			{ id: '9', label: 'In 9', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x95, 0x00, 0x02, 0x00, 0x09, 0x00, 0x00, 0x00]) },
			{ id: '10', label: 'In 10', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x95, 0x00, 0x02, 0x00, 0x0a, 0x00, 0x00, 0x00]) },
			{ id: '11', label: 'In 11', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x95, 0x00, 0x02, 0x00, 0x0b, 0x00, 0x00, 0x00]) },
			{ id: '12', label: 'In 12', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x95, 0x00, 0x02, 0x00, 0x0c, 0x00, 0x00, 0x00]) },
			{ id: '19', label: 'Still 1', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x95, 0x00, 0x02, 0x00, 0x13, 0x00, 0x00, 0x00]) },
			{ id: '20', label: 'Still 2', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x95, 0x00, 0x02, 0x00, 0x14, 0x00, 0x00, 0x00]) },
			{ id: '21', label: 'Flex', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x95, 0x00, 0x02, 0x00, 0x15, 0x00, 0x00, 0x00]) },
			{ id: '17', label: 'Matte', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x95, 0x00, 0x02, 0x00, 0x11, 0x00, 0x00, 0x00]) },
			{ id: '18', label: 'Bars', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x95, 0x00, 0x02, 0x00, 0x12, 0x00, 0x00, 0x00]) },
		];




		// 3200 Transistion Controls
		this.CHOICES_TRANS_3200 = [
			{ id: '0', label: 'Auto', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x01, 0x00, 0x00, 0x00]) },
			{ id: '1', label: 'Cut', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x05, 0x00, 0x00, 0x00]) },
			{ id: '2', label: 'DSK Auto', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x05, 0x00, 0x07, 0x00, 0x01, 0x00, 0x00, 0x00]) },
			{ id: '3', label: 'DSK Cut', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x05, 0x00, 0x07, 0x00, 0x05, 0x00, 0x00, 0x00]) },
			{ id: '4', label: 'Mix', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x96, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00]) },
			{ id: '5', label: 'Wipe', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x96, 0x00, 0x02, 0x00, 0x01, 0x00, 0x00, 0x00]) },
			{ id: '6', label: 'Clip', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x96, 0x00, 0x02, 0x00, 0x02, 0x00, 0x00, 0x00]) },
			{ id: '15', label: 'DVE Trans', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x96, 0x00, 0x02, 0x00, 0x03, 0x00, 0x00, 0x00]) },
			{ id: '16', label: 'DVE 1', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x97, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00]) },
			{ id: '17', label: 'DVE 2', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x97, 0x00, 0x02, 0x00, 0x01, 0x00, 0x00, 0x00]) },
			{ id: '18', label: 'DVE 3', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x97, 0x00, 0x02, 0x00, 0x02, 0x00, 0x00, 0x00]) },
			{ id: '7', label: 'NORM REV ON', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x93, 0x00, 0x02, 0x00, 0x01, 0x00, 0x00, 0x00]) },
			{ id: '8', label: 'NORM REV OFF', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x93, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00]) },
			{ id: '9', label: 'REV ON', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x92, 0x00, 0x02, 0x00, 0x01, 0x00, 0x00, 0x00]) },
			{ id: '10', label: 'REV OFF', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x92, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00]) },
			{ id: '11', label: 'TRANS PVW ON', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x91, 0x00, 0x02, 0x00, 0x01, 0x00, 0x00, 0x00]) },
			{ id: '12', label: 'TRANS PVW OFF', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x91, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00]) },
			{ id: '13', label: 'KEY PRIORITY ON', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x90, 0x00, 0x02, 0x00, 0x01, 0x00, 0x00, 0x00]) },
			{ id: '14', label: 'KEY PRIORITY OFF', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x90, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00]) },
			{ id: '40', label: 'BACKGROUND ON', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x8b, 0x00, 0x02, 0x00, 0x01, 0x00, 0x00, 0x00]) },
			{ id: '41', label: 'BACKGROUND OFF', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x8b, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00]) },
		];

		//3200 KEY 1 Aux Bus
		this.CHOICES_SWITCH_KEY1_3200 = [
			{ id: '0', label: 'Black', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x14, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00]) },
			{ id: '1', label: 'In 1', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x14, 0x00, 0x02, 0x00, 0x01, 0x00, 0x00, 0x00]) },
			{ id: '2', label: 'In 2', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x14, 0x00, 0x02, 0x00, 0x02, 0x00, 0x00, 0x00]) },
			{ id: '3', label: 'In 3', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x14, 0x00, 0x02, 0x00, 0x03, 0x00, 0x00, 0x00]) },
			{ id: '4', label: 'In 4', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x14, 0x00, 0x02, 0x00, 0x04, 0x00, 0x00, 0x00]) },
			{ id: '5', label: 'In 5', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x14, 0x00, 0x02, 0x00, 0x05, 0x00, 0x00, 0x00]) },
			{ id: '6', label: 'In 6', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x14, 0x00, 0x02, 0x00, 0x06, 0x00, 0x00, 0x00]) },
			{ id: '7', label: 'In 7', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x14, 0x00, 0x02, 0x00, 0x07, 0x00, 0x00, 0x00]) },
			{ id: '8', label: 'In 8', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x14, 0x00, 0x02, 0x00, 0x08, 0x00, 0x00, 0x00]) },
			{ id: '9', label: 'In 9', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x14, 0x00, 0x02, 0x00, 0x09, 0x00, 0x00, 0x00]) },
			{ id: '10', label: 'In 10', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x14, 0x00, 0x02, 0x00, 0x0a, 0x00, 0x00, 0x00]) },
			{ id: '11', label: 'In 11', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x14, 0x00, 0x02, 0x00, 0x0b, 0x00, 0x00, 0x00]) },
			{ id: '12', label: 'In 12', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x14, 0x00, 0x02, 0x00, 0x0c, 0x00, 0x00, 0x00]) },
			{ id: '19', label: 'Still 1', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x14, 0x00, 0x02, 0x00, 0x13, 0x00, 0x00, 0x00]) },
			{ id: '20', label: 'Still 2', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x14, 0x00, 0x02, 0x00, 0x14, 0x00, 0x00, 0x00]) },
			{ id: '21', label: 'Flex', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x14, 0x00, 0x02, 0x00, 0x15, 0x00, 0x00, 0x00]) },
			{ id: '17', label: 'Matte', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x14, 0x00, 0x02, 0x00, 0x11, 0x00, 0x00, 0x00]) },
			{ id: '18', label: 'Bars', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x14, 0x00, 0x02, 0x00, 0x12, 0x00, 0x00, 0x00]) },
		];

		//3200 KEY 2 Aux Bus
		this.CHOICES_SWITCH_KEY2_3200 = [
			{ id: '0', label: 'Black', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00]) },
			{ id: '1', label: 'In 1', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x02, 0x00, 0x01, 0x00, 0x00, 0x00]) },
			{ id: '2', label: 'In 2', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x02, 0x00, 0x02, 0x00, 0x00, 0x00]) },
			{ id: '3', label: 'In 3', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x02, 0x00, 0x03, 0x00, 0x00, 0x00]) },
			{ id: '4', label: 'In 4', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x02, 0x00, 0x04, 0x00, 0x00, 0x00]) },
			{ id: '5', label: 'In 5', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x02, 0x00, 0x05, 0x00, 0x00, 0x00]) },
			{ id: '6', label: 'In 6', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x02, 0x00, 0x06, 0x00, 0x00, 0x00]) },
			{ id: '7', label: 'In 7', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x02, 0x00, 0x07, 0x00, 0x00, 0x00]) },
			{ id: '8', label: 'In 8', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x02, 0x00, 0x08, 0x00, 0x00, 0x00]) },
			{ id: '9', label: 'In 9', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x02, 0x00, 0x09, 0x00, 0x00, 0x00]) },
			{ id: '10', label: 'In 10', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x02, 0x00, 0x0a, 0x00, 0x00, 0x00]) },
			{ id: '11', label: 'In 11', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x02, 0x00, 0x0b, 0x00, 0x00, 0x00]) },
			{ id: '12', label: 'In 12', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x02, 0x00, 0x0c, 0x00, 0x00, 0x00]) },
			{ id: '19', label: 'Still 1', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x02, 0x00, 0x13, 0x00, 0x00, 0x00]) },
			{ id: '20', label: 'Still 2', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x02, 0x00, 0x14, 0x00, 0x00, 0x00]) },
			{ id: '21', label: 'Flex', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x02, 0x00, 0x15, 0x00, 0x00, 0x00]) },
			{ id: '17', label: 'Matte', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x02, 0x00, 0x11, 0x00, 0x00, 0x00]) },
			{ id: '18', label: 'Bars', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x02, 0x00, 0x12, 0x00, 0x00, 0x00]) },
		];

		//3200 KEY 3 Aux Bus
		this.CHOICES_SWITCH_KEY3_3200 = [
			{ id: '0', label: 'Black', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x50, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00]) },
			{ id: '1', label: 'In 1', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x50, 0x00, 0x02, 0x00, 0x01, 0x00, 0x00, 0x00]) },
			{ id: '2', label: 'In 2', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x50, 0x00, 0x02, 0x00, 0x02, 0x00, 0x00, 0x00]) },
			{ id: '3', label: 'In 3', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x50, 0x00, 0x02, 0x00, 0x03, 0x00, 0x00, 0x00]) },
			{ id: '4', label: 'In 4', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x50, 0x00, 0x02, 0x00, 0x04, 0x00, 0x00, 0x00]) },
			{ id: '5', label: 'In 5', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x50, 0x00, 0x02, 0x00, 0x05, 0x00, 0x00, 0x00]) },
			{ id: '6', label: 'In 6', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x50, 0x00, 0x02, 0x00, 0x06, 0x00, 0x00, 0x00]) },
			{ id: '7', label: 'In 7', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x50, 0x00, 0x02, 0x00, 0x07, 0x00, 0x00, 0x00]) },
			{ id: '8', label: 'In 8', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x50, 0x00, 0x02, 0x00, 0x08, 0x00, 0x00, 0x00]) },
			{ id: '9', label: 'In 9', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x50, 0x00, 0x02, 0x00, 0x09, 0x00, 0x00, 0x00]) },
			{ id: '10', label: 'In 10', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x50, 0x00, 0x02, 0x00, 0x0a, 0x00, 0x00, 0x00]) },
			{ id: '11', label: 'In 11', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x50, 0x00, 0x02, 0x00, 0x0b, 0x00, 0x00, 0x00]) },
			{ id: '12', label: 'In 12', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x50, 0x00, 0x02, 0x00, 0x0c, 0x00, 0x00, 0x00]) },
			{ id: '19', label: 'Still 1', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x50, 0x00, 0x02, 0x00, 0x13, 0x00, 0x00, 0x00]) },
			{ id: '20', label: 'Still 2', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x50, 0x00, 0x02, 0x00, 0x14, 0x00, 0x00, 0x00]) },
			{ id: '21', label: 'Flex', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x50, 0x00, 0x02, 0x00, 0x15, 0x00, 0x00, 0x00]) },
			{ id: '17', label: 'Matte', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x50, 0x00, 0x02, 0x00, 0x11, 0x00, 0x00, 0x00]) },
			{ id: '18', label: 'Bars', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x50, 0x00, 0x02, 0x00, 0x12, 0x00, 0x00, 0x00]) },
		];

		//3200 KEY 4 Aux Bus
		this.CHOICES_SWITCH_KEY4_3200 = [
			{ id: '0', label: 'Black', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x6e, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00]) },
			{ id: '1', label: 'In 1', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x6e, 0x00, 0x02, 0x00, 0x01, 0x00, 0x00, 0x00]) },
			{ id: '2', label: 'In 2', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x6e, 0x00, 0x02, 0x00, 0x02, 0x00, 0x00, 0x00]) },
			{ id: '3', label: 'In 3', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x6e, 0x00, 0x02, 0x00, 0x03, 0x00, 0x00, 0x00]) },
			{ id: '4', label: 'In 4', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x6e, 0x00, 0x02, 0x00, 0x04, 0x00, 0x00, 0x00]) },
			{ id: '5', label: 'In 5', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x6e, 0x00, 0x02, 0x00, 0x05, 0x00, 0x00, 0x00]) },
			{ id: '6', label: 'In 6', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x6e, 0x00, 0x02, 0x00, 0x06, 0x00, 0x00, 0x00]) },
			{ id: '7', label: 'In 7', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x6e, 0x00, 0x02, 0x00, 0x07, 0x00, 0x00, 0x00]) },
			{ id: '8', label: 'In 8', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x6e, 0x00, 0x02, 0x00, 0x08, 0x00, 0x00, 0x00]) },
			{ id: '9', label: 'In 9', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x6e, 0x00, 0x02, 0x00, 0x09, 0x00, 0x00, 0x00]) },
			{ id: '10', label: 'In 10', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x6e, 0x00, 0x02, 0x00, 0x0a, 0x00, 0x00, 0x00]) },
			{ id: '11', label: 'In 11', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x6e, 0x00, 0x02, 0x00, 0x0b, 0x00, 0x00, 0x00]) },
			{ id: '12', label: 'In 12', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x6e, 0x00, 0x02, 0x00, 0x0c, 0x00, 0x00, 0x00]) },
			{ id: '19', label: 'Still 1', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x6e, 0x00, 0x02, 0x00, 0x13, 0x00, 0x00, 0x00]) },
			{ id: '20', label: 'Still 2', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x6e, 0x00, 0x02, 0x00, 0x14, 0x00, 0x00, 0x00]) },
			{ id: '21', label: 'Flex', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x6e, 0x00, 0x02, 0x00, 0x15, 0x00, 0x00, 0x00]) },
			{ id: '17', label: 'Matte', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x6e, 0x00, 0x02, 0x00, 0x11, 0x00, 0x00, 0x00]) },
			{ id: '18', label: 'Bars', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x6e, 0x00, 0x02, 0x00, 0x12, 0x00, 0x00, 0x00]) },
		];
		//3200 DSK 1 Aux Bus
		this.CHOICES_SWITCH_DSK1_3200 = [
			{ id: '0', label: 'Black', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x9a, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00]) },
			{ id: '1', label: 'In 1', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x9a, 0x00, 0x02, 0x00, 0x01, 0x00, 0x00, 0x00]) },
			{ id: '2', label: 'In 2', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x9a, 0x00, 0x02, 0x00, 0x02, 0x00, 0x00, 0x00]) },
			{ id: '3', label: 'In 3', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x9a, 0x00, 0x02, 0x00, 0x03, 0x00, 0x00, 0x00]) },
			{ id: '4', label: 'In 4', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x9a, 0x00, 0x02, 0x00, 0x04, 0x00, 0x00, 0x00]) },
			{ id: '5', label: 'In 5', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x9a, 0x00, 0x02, 0x00, 0x05, 0x00, 0x00, 0x00]) },
			{ id: '6', label: 'In 6', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x9a, 0x00, 0x02, 0x00, 0x06, 0x00, 0x00, 0x00]) },
			{ id: '7', label: 'In 7', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x9a, 0x00, 0x02, 0x00, 0x07, 0x00, 0x00, 0x00]) },
			{ id: '8', label: 'In 8', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x9a, 0x00, 0x02, 0x00, 0x08, 0x00, 0x00, 0x00]) },
			{ id: '9', label: 'In 9', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x9a, 0x00, 0x02, 0x00, 0x09, 0x00, 0x00, 0x00]) },
			{ id: '10', label: 'In 10', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x9a, 0x00, 0x02, 0x00, 0x0a, 0x00, 0x00, 0x00]) },
			{ id: '11', label: 'In 11', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x9a, 0x00, 0x02, 0x00, 0x0b, 0x00, 0x00, 0x00]) },
			{ id: '12', label: 'In 12', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x9a, 0x00, 0x02, 0x00, 0x0c, 0x00, 0x00, 0x00]) },
			{ id: '19', label: 'Still 1', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x9a, 0x00, 0x02, 0x00, 0x13, 0x00, 0x00, 0x00]) },
			{ id: '20', label: 'Still 2', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x9a, 0x00, 0x02, 0x00, 0x14, 0x00, 0x00, 0x00]) },
			{ id: '21', label: 'Flex', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x9a, 0x00, 0x02, 0x00, 0x15, 0x00, 0x00, 0x00]) },
			{ id: '17', label: 'Matte', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x9a, 0x00, 0x02, 0x00, 0x11, 0x00, 0x00, 0x00]) },
			{ id: '18', label: 'Bars', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x9a, 0x00, 0x02, 0x00, 0x12, 0x00, 0x00, 0x00]) },
		];
		//3200 DSK 2 Aux Bus
		this.CHOICES_SWITCH_DSK2_3200 = [
			{ id: '0', label: 'Black', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0xac, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00]) },
			{ id: '1', label: 'In 1', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0xac, 0x00, 0x02, 0x00, 0x01, 0x00, 0x00, 0x00]) },
			{ id: '2', label: 'In 2', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0xac, 0x00, 0x02, 0x00, 0x02, 0x00, 0x00, 0x00]) },
			{ id: '3', label: 'In 3', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0xac, 0x00, 0x02, 0x00, 0x03, 0x00, 0x00, 0x00]) },
			{ id: '4', label: 'In 4', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0xac, 0x00, 0x02, 0x00, 0x04, 0x00, 0x00, 0x00]) },
			{ id: '5', label: 'In 5', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0xac, 0x00, 0x02, 0x00, 0x05, 0x00, 0x00, 0x00]) },
			{ id: '6', label: 'In 6', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0xac, 0x00, 0x02, 0x00, 0x06, 0x00, 0x00, 0x00]) },
			{ id: '7', label: 'In 7', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0xac, 0x00, 0x02, 0x00, 0x07, 0x00, 0x00, 0x00]) },
			{ id: '8', label: 'In 8', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0xac, 0x00, 0x02, 0x00, 0x08, 0x00, 0x00, 0x00]) },
			{ id: '9', label: 'In 9', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0xac, 0x00, 0x02, 0x00, 0x09, 0x00, 0x00, 0x00]) },
			{ id: '10', label: 'In 10', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0xac, 0x00, 0x02, 0x00, 0x0a, 0x00, 0x00, 0x00]) },
			{ id: '11', label: 'In 11', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0xac, 0x00, 0x02, 0x00, 0x0b, 0x00, 0x00, 0x00]) },
			{ id: '12', label: 'In 12', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0xac, 0x00, 0x02, 0x00, 0x0c, 0x00, 0x00, 0x00]) },
			{ id: '19', label: 'Still 1', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0xac, 0x00, 0x02, 0x00, 0x13, 0x00, 0x00, 0x00]) },
			{ id: '20', label: 'Still 2', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0xac, 0x00, 0x02, 0x00, 0x14, 0x00, 0x00, 0x00]) },
			{ id: '21', label: 'Flex', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0xac, 0x00, 0x02, 0x00, 0x15, 0x00, 0x00, 0x00]) },
			{ id: '17', label: 'Matte', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0xac, 0x00, 0x02, 0x00, 0x11, 0x00, 0x00, 0x00]) },
			{ id: '18', label: 'Bars', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0xac, 0x00, 0x02, 0x00, 0x12, 0x00, 0x00, 0x00]) },
		];

		//3200 Aux 1
		this.CHOICES_SWITCH_AUX1_3200 = [
			{ id: '0', label: 'Black', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00]) },
			{ id: '1', label: 'In 1', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x01, 0x00, 0x00, 0x00]) },
			{ id: '2', label: 'In 2', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x02, 0x00, 0x00, 0x00]) },
			{ id: '3', label: 'In 3', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x03, 0x00, 0x00, 0x00]) },
			{ id: '4', label: 'In 4', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x04, 0x00, 0x00, 0x00]) },
			{ id: '5', label: 'In 5', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x05, 0x00, 0x00, 0x00]) },
			{ id: '6', label: 'In 6', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x06, 0x00, 0x00, 0x00]) },
			{ id: '7', label: 'In 7', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00]) },
			{ id: '8', label: 'In 8', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x08, 0x00, 0x00, 0x00]) },
			{ id: '9', label: 'In 9', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x09, 0x00, 0x00, 0x00]) },
			{ id: '10', label: 'In 10', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x0a, 0x00, 0x00, 0x00]) },
			{ id: '11', label: 'In 11', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00]) },
			{ id: '12', label: 'In 12', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x0c, 0x00, 0x00, 0x00]) },
			{ id: '19', label: 'Still 1', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00]) },
			{ id: '20', label: 'Still 2', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x14, 0x00, 0x00, 0x00]) },
			{ id: '18', label: 'Flex', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x12, 0x00, 0x00, 0x00]) },
			{ id: '17', label: 'Matte', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x11, 0x00, 0x00, 0x00]) },
			{ id: '21', label: 'PGM Out', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x15, 0x00, 0x00, 0x00]) },
			{ id: '22', label: 'PVW Out', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x16, 0x00, 0x00, 0x00]) },
			{ id: '23', label: 'PGM/DSK1', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x17, 0x00, 0x00, 0x00]) },
			{ id: '24', label: 'PVW/DSK1', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x18, 0x00, 0x00, 0x00]) },
		];
		//3200 Aux 2
		this.CHOICES_SWITCH_AUX2_3200 = [
			{ id: '0', label: 'Black', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00]) },
			{ id: '1', label: 'In 1', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x05, 0x00, 0x01, 0x00, 0x00, 0x00]) },
			{ id: '2', label: 'In 2', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x05, 0x00, 0x02, 0x00, 0x00, 0x00]) },
			{ id: '3', label: 'In 3', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x05, 0x00, 0x03, 0x00, 0x00, 0x00]) },
			{ id: '4', label: 'In 4', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x05, 0x00, 0x04, 0x00, 0x00, 0x00]) },
			{ id: '5', label: 'In 5', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x05, 0x00, 0x05, 0x00, 0x00, 0x00]) },
			{ id: '6', label: 'In 6', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x05, 0x00, 0x06, 0x00, 0x00, 0x00]) },
			{ id: '7', label: 'In 7', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00]) },
			{ id: '8', label: 'In 8', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x05, 0x00, 0x08, 0x00, 0x00, 0x00]) },
			{ id: '9', label: 'In 9', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x05, 0x00, 0x09, 0x00, 0x00, 0x00]) },
			{ id: '10', label: 'In 10', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x05, 0x00, 0x0a, 0x00, 0x00, 0x00]) },
			{ id: '11', label: 'In 11', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00]) },
			{ id: '12', label: 'In 12', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x05, 0x00, 0x0c, 0x00, 0x00, 0x00]) },
			{ id: '19', label: 'Still 1', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00]) },
			{ id: '20', label: 'Still 2', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x05, 0x00, 0x14, 0x00, 0x00, 0x00]) },
			{ id: '18', label: 'Flex', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x05, 0x00, 0x12, 0x00, 0x00, 0x00]) },
			{ id: '17', label: 'Matte', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x05, 0x00, 0x11, 0x00, 0x00, 0x00]) },
			{ id: '21', label: 'PGM Out', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x05, 0x00, 0x15, 0x00, 0x00, 0x00]) },
			{ id: '22', label: 'PVW Out', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x05, 0x00, 0x16, 0x00, 0x00, 0x00]) },
			{ id: '23', label: 'PGM/DSK1', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x05, 0x00, 0x17, 0x00, 0x00, 0x00]) },
			{ id: '24', label: 'PVW/DSK1', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x05, 0x00, 0x18, 0x00, 0x00, 0x00]) },
		];
		//3200 Aux 3
		this.CHOICES_SWITCH_AUX3_3200 = [
			{ id: '0', label: 'Black', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00]) },
			{ id: '1', label: 'In 1', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x05, 0x00, 0x01, 0x00, 0x00, 0x00]) },
			{ id: '2', label: 'In 2', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x05, 0x00, 0x02, 0x00, 0x00, 0x00]) },
			{ id: '3', label: 'In 3', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x05, 0x00, 0x03, 0x00, 0x00, 0x00]) },
			{ id: '4', label: 'In 4', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x05, 0x00, 0x04, 0x00, 0x00, 0x00]) },
			{ id: '5', label: 'In 5', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x05, 0x00, 0x05, 0x00, 0x00, 0x00]) },
			{ id: '6', label: 'In 6', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x05, 0x00, 0x06, 0x00, 0x00, 0x00]) },
			{ id: '7', label: 'In 7', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00]) },
			{ id: '8', label: 'In 8', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x05, 0x00, 0x08, 0x00, 0x00, 0x00]) },
			{ id: '9', label: 'In 9', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x05, 0x00, 0x09, 0x00, 0x00, 0x00]) },
			{ id: '10', label: 'In 10', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x05, 0x00, 0x0a, 0x00, 0x00, 0x00]) },
			{ id: '11', label: 'In 11', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00]) },
			{ id: '12', label: 'In 12', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x05, 0x00, 0x0c, 0x00, 0x00, 0x00]) },
			{ id: '19', label: 'Still 1', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00]) },
			{ id: '20', label: 'Still 2', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x05, 0x00, 0x14, 0x00, 0x00, 0x00]) },
			{ id: '18', label: 'Flex', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x05, 0x00, 0x12, 0x00, 0x00, 0x00]) },
			{ id: '17', label: 'Matte', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x05, 0x00, 0x11, 0x00, 0x00, 0x00]) },
			{ id: '21', label: 'PGM Out', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x05, 0x00, 0x15, 0x00, 0x00, 0x00]) },
			{ id: '22', label: 'PVW Out', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x05, 0x00, 0x16, 0x00, 0x00, 0x00]) },
			{ id: '23', label: 'PGM/DSK', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x05, 0x00, 0x17, 0x00, 0x00, 0x00]) },
			{ id: '24', label: 'PVW/DSK', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x05, 0x00, 0x18, 0x00, 0x00, 0x00]) },
		];
		//3200 Aux 4
		this.CHOICES_SWITCH_AUX4_3200 = [
			{ id: '0', label: 'Black', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00]) },
			{ id: '1', label: 'In 1', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x05, 0x00, 0x01, 0x00, 0x00, 0x00]) },
			{ id: '2', label: 'In 2', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x05, 0x00, 0x02, 0x00, 0x00, 0x00]) },
			{ id: '3', label: 'In 3', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x05, 0x00, 0x03, 0x00, 0x00, 0x00]) },
			{ id: '4', label: 'In 4', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x05, 0x00, 0x04, 0x00, 0x00, 0x00]) },
			{ id: '5', label: 'In 5', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x05, 0x00, 0x05, 0x00, 0x00, 0x00]) },
			{ id: '6', label: 'In 6', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x05, 0x00, 0x06, 0x00, 0x00, 0x00]) },
			{ id: '7', label: 'In 7', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00]) },
			{ id: '8', label: 'In 8', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x05, 0x00, 0x08, 0x00, 0x00, 0x00]) },
			{ id: '9', label: 'In 9', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x05, 0x00, 0x09, 0x00, 0x00, 0x00]) },
			{ id: '10', label: 'In 10', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x05, 0x00, 0x0a, 0x00, 0x00, 0x00]) },
			{ id: '11', label: 'In 11', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00]) },
			{ id: '12', label: 'In 12', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x05, 0x00, 0x0c, 0x00, 0x00, 0x00]) },
			{ id: '19', label: 'Still 1', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00]) },
			{ id: '20', label: 'Still 2', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x05, 0x00, 0x14, 0x00, 0x00, 0x00]) },
			{ id: '18', label: 'Flex', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x05, 0x00, 0x12, 0x00, 0x00, 0x00]) },
			{ id: '17', label: 'Matte', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x05, 0x00, 0x11, 0x00, 0x00, 0x00]) },
			{ id: '21', label: 'PGM Out', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x05, 0x00, 0x15, 0x00, 0x00, 0x00]) },
			{ id: '22', label: 'PVW Out', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x05, 0x00, 0x16, 0x00, 0x00, 0x00]) },
			{ id: '23', label: 'PGM/DSK', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x05, 0x00, 0x17, 0x00, 0x00, 0x00]) },
			{ id: '24', label: 'PVW/DSK', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x05, 0x00, 0x18, 0x00, 0x00, 0x00]) },
		];

		//3200 SDI1
		this.CHOICES_SWITCH_SDI1_3200 = [
			{ id: '28', label: 'MultiV', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x12, 0x00, 0x05, 0x00, 0x1c, 0x00, 0x00, 0x00]) },
			{ id: '29', label: 'MultiV2', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x12, 0x00, 0x05, 0x00, 0x1d, 0x00, 0x00, 0x00]) },
			{ id: '0', label: 'Black', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x12, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00]) },
			{ id: '1', label: 'In 1', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x12, 0x00, 0x05, 0x00, 0x01, 0x00, 0x00, 0x00]) },
			{ id: '2', label: 'In 2', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x12, 0x00, 0x05, 0x00, 0x02, 0x00, 0x00, 0x00]) },
			{ id: '3', label: 'In 3', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x12, 0x00, 0x05, 0x00, 0x03, 0x00, 0x00, 0x00]) },
			{ id: '4', label: 'In 4', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x12, 0x00, 0x05, 0x00, 0x04, 0x00, 0x00, 0x00]) },
			{ id: '5', label: 'In 5', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x12, 0x00, 0x05, 0x00, 0x05, 0x00, 0x00, 0x00]) },
			{ id: '6', label: 'In 6', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x12, 0x00, 0x05, 0x00, 0x06, 0x00, 0x00, 0x00]) },
			{ id: '7', label: 'In 7', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x12, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00]) },
			{ id: '8', label: 'In 8', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x12, 0x00, 0x05, 0x00, 0x08, 0x00, 0x00, 0x00]) },
			{ id: '9', label: 'In 9', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x12, 0x00, 0x05, 0x00, 0x09, 0x00, 0x00, 0x00]) },
			{ id: '10', label: 'In 10', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x12, 0x00, 0x05, 0x00, 0x0a, 0x00, 0x00, 0x00]) },
			{ id: '11', label: 'In 11', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x12, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00]) },
			{ id: '12', label: 'In 12', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x12, 0x00, 0x05, 0x00, 0x0c, 0x00, 0x00, 0x00]) },
			{ id: '19', label: 'Still 1', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x12, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00]) },
			{ id: '20', label: 'Still 2', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x12, 0x00, 0x05, 0x00, 0x14, 0x00, 0x00, 0x00]) },
			{ id: '18', label: 'Flex', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x12, 0x00, 0x05, 0x00, 0x12, 0x00, 0x00, 0x00]) },
			{ id: '16', label: 'Clean PGM', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x12, 0x00, 0x05, 0x00, 0x1a, 0x00, 0x00, 0x00]) },
			{ id: '27', label: 'Clean PVW', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x12, 0x00, 0x05, 0x00, 0x1b, 0x00, 0x00, 0x00]) },
			{ id: '22', label: 'PGM Out', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x12, 0x00, 0x05, 0x00, 0x16, 0x00, 0x00, 0x00]) },
			{ id: '23', label: 'PVW Out', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x12, 0x00, 0x05, 0x00, 0x17, 0x00, 0x00, 0x00]) },
			{ id: '24', label: 'PGM/DSK', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x12, 0x00, 0x05, 0x00, 0x18, 0x00, 0x00, 0x00]) },
			{ id: '25', label: 'PVW/DSK', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x12, 0x00, 0x05, 0x00, 0x19, 0x00, 0x00, 0x00]) },
		];
		//3200 SDI2
		this.CHOICES_SWITCH_SDI2_3200 = [
			{ id: '28', label: 'MultiV', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x13, 0x00, 0x05, 0x00, 0x1c, 0x00, 0x00, 0x00]) },
			{ id: '29', label: 'MultiV2', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x13, 0x00, 0x05, 0x00, 0x1d, 0x00, 0x00, 0x00]) },
			{ id: '0', label: 'Black', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x13, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00]) },
			{ id: '1', label: 'In 1', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x13, 0x00, 0x05, 0x00, 0x01, 0x00, 0x00, 0x00]) },
			{ id: '2', label: 'In 2', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x13, 0x00, 0x05, 0x00, 0x02, 0x00, 0x00, 0x00]) },
			{ id: '3', label: 'In 3', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x13, 0x00, 0x05, 0x00, 0x03, 0x00, 0x00, 0x00]) },
			{ id: '4', label: 'In 4', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x13, 0x00, 0x05, 0x00, 0x04, 0x00, 0x00, 0x00]) },
			{ id: '5', label: 'In 5', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x13, 0x00, 0x05, 0x00, 0x05, 0x00, 0x00, 0x00]) },
			{ id: '6', label: 'In 6', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x13, 0x00, 0x05, 0x00, 0x06, 0x00, 0x00, 0x00]) },
			{ id: '7', label: 'In 7', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x13, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00]) },
			{ id: '8', label: 'In 8', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x13, 0x00, 0x05, 0x00, 0x08, 0x00, 0x00, 0x00]) },
			{ id: '9', label: 'In 9', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x13, 0x00, 0x05, 0x00, 0x09, 0x00, 0x00, 0x00]) },
			{ id: '10', label: 'In 10', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x13, 0x00, 0x05, 0x00, 0x0a, 0x00, 0x00, 0x00]) },
			{ id: '11', label: 'In 11', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x13, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00]) },
			{ id: '12', label: 'In 12', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x13, 0x00, 0x05, 0x00, 0x0c, 0x00, 0x00, 0x00]) },
			{ id: '19', label: 'Still 1', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x13, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00]) },
			{ id: '20', label: 'Still 2', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x13, 0x00, 0x05, 0x00, 0x14, 0x00, 0x00, 0x00]) },
			{ id: '18', label: 'Flex', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x13, 0x00, 0x05, 0x00, 0x12, 0x00, 0x00, 0x00]) },
			{ id: '16', label: 'Clean PGM', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x13, 0x00, 0x05, 0x00, 0x1a, 0x00, 0x00, 0x00]) },
			{ id: '27', label: 'Clean PVW', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x13, 0x00, 0x05, 0x00, 0x1b, 0x00, 0x00, 0x00]) },
			{ id: '22', label: 'PGM Out', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x13, 0x00, 0x05, 0x00, 0x16, 0x00, 0x00, 0x00]) },
			{ id: '23', label: 'PVW Out', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x13, 0x00, 0x05, 0x00, 0x17, 0x00, 0x00, 0x00]) },
			{ id: '24', label: 'PGM/DSK', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x13, 0x00, 0x05, 0x00, 0x18, 0x00, 0x00, 0x00]) },
			{ id: '25', label: 'PVW/DSK', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x13, 0x00, 0x05, 0x00, 0x19, 0x00, 0x00, 0x00]) },
		];
		//3200 HDMI1
		this.CHOICES_SWITCH_HDMI1_3200 = [
			{ id: '28', label: 'MultiV', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x05, 0x00, 0x1c, 0x00, 0x00, 0x00]) },
			{ id: '29', label: 'MultiV2', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x05, 0x00, 0x1d, 0x00, 0x00, 0x00]) },
			{ id: '0', label: 'Black', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00]) },
			{ id: '1', label: 'In 1', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x05, 0x00, 0x01, 0x00, 0x00, 0x00]) },
			{ id: '2', label: 'In 2', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x05, 0x00, 0x02, 0x00, 0x00, 0x00]) },
			{ id: '3', label: 'In 3', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x05, 0x00, 0x03, 0x00, 0x00, 0x00]) },
			{ id: '4', label: 'In 4', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x05, 0x00, 0x04, 0x00, 0x00, 0x00]) },
			{ id: '5', label: 'In 5', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x05, 0x00, 0x05, 0x00, 0x00, 0x00]) },
			{ id: '6', label: 'In 6', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x05, 0x00, 0x06, 0x00, 0x00, 0x00]) },
			{ id: '7', label: 'In 7', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00]) },
			{ id: '8', label: 'In 8', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x05, 0x00, 0x08, 0x00, 0x00, 0x00]) },
			{ id: '9', label: 'In 9', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x05, 0x00, 0x09, 0x00, 0x00, 0x00]) },
			{ id: '10', label: 'In 10', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x05, 0x00, 0x0a, 0x00, 0x00, 0x00]) },
			{ id: '11', label: 'In 11', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00]) },
			{ id: '12', label: 'In 12', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x05, 0x00, 0x0c, 0x00, 0x00, 0x00]) },
			{ id: '19', label: 'Still 1', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00]) },
			{ id: '20', label: 'Still 2', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x05, 0x00, 0x14, 0x00, 0x00, 0x00]) },
			{ id: '18', label: 'Flex', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x05, 0x00, 0x12, 0x00, 0x00, 0x00]) },
			{ id: '16', label: 'Clean PGM', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x05, 0x00, 0x1a, 0x00, 0x00, 0x00]) },
			{ id: '27', label: 'Clean PVW', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x05, 0x00, 0x1b, 0x00, 0x00, 0x00]) },
			{ id: '22', label: 'PGM Out', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x05, 0x00, 0x16, 0x00, 0x00, 0x00]) },
			{ id: '23', label: 'PVW Out', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x05, 0x00, 0x17, 0x00, 0x00, 0x00]) },
			{ id: '24', label: 'PGM/DSK', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x05, 0x00, 0x18, 0x00, 0x00, 0x00]) },
			{ id: '25', label: 'PVW/DSK', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x05, 0x00, 0x19, 0x00, 0x00, 0x00]) },
		];

		//3200 HDMI2
		this.CHOICES_SWITCH_HDMI2_3200 = [
			{ id: '28', label: 'MultiV', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x10, 0x00, 0x05, 0x00, 0x1c, 0x00, 0x00, 0x00]) },
			{ id: '29', label: 'MultiV2', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x10, 0x00, 0x05, 0x00, 0x1d, 0x00, 0x00, 0x00]) },
			{ id: '0', label: 'Black', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00]) },
			{ id: '1', label: 'In 1', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x10, 0x00, 0x05, 0x00, 0x01, 0x00, 0x00, 0x00]) },
			{ id: '2', label: 'In 2', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x10, 0x00, 0x05, 0x00, 0x02, 0x00, 0x00, 0x00]) },
			{ id: '3', label: 'In 3', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x10, 0x00, 0x05, 0x00, 0x03, 0x00, 0x00, 0x00]) },
			{ id: '4', label: 'In 4', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x10, 0x00, 0x05, 0x00, 0x04, 0x00, 0x00, 0x00]) },
			{ id: '5', label: 'In 5', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x10, 0x00, 0x05, 0x00, 0x05, 0x00, 0x00, 0x00]) },
			{ id: '6', label: 'In 6', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x10, 0x00, 0x05, 0x00, 0x06, 0x00, 0x00, 0x00]) },
			{ id: '7', label: 'In 7', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x10, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00]) },
			{ id: '8', label: 'In 8', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x10, 0x00, 0x05, 0x00, 0x08, 0x00, 0x00, 0x00]) },
			{ id: '9', label: 'In 9', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x10, 0x00, 0x05, 0x00, 0x09, 0x00, 0x00, 0x00]) },
			{ id: '10', label: 'In 10', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x10, 0x00, 0x05, 0x00, 0x0a, 0x00, 0x00, 0x00]) },
			{ id: '11', label: 'In 11', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x10, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00]) },
			{ id: '12', label: 'In 12', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x10, 0x00, 0x05, 0x00, 0x0c, 0x00, 0x00, 0x00]) },
			{ id: '19', label: 'Still 1', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x10, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00]) },
			{ id: '20', label: 'Still 2', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x10, 0x00, 0x05, 0x00, 0x14, 0x00, 0x00, 0x00]) },
			{ id: '18', label: 'Flex', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x10, 0x00, 0x05, 0x00, 0x12, 0x00, 0x00, 0x00]) },
			{ id: '16', label: 'Clean PGM', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x10, 0x00, 0x05, 0x00, 0x1a, 0x00, 0x00, 0x00]) },
			{ id: '27', label: 'Clean PVW', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x10, 0x00, 0x05, 0x00, 0x1b, 0x00, 0x00, 0x00]) },
			{ id: '22', label: 'PGM Out', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x10, 0x00, 0x05, 0x00, 0x16, 0x00, 0x00, 0x00]) },
			{ id: '23', label: 'PVW Out', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x10, 0x00, 0x05, 0x00, 0x17, 0x00, 0x00, 0x00]) },
			{ id: '24', label: 'PGM/DSK', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x10, 0x00, 0x05, 0x00, 0x18, 0x00, 0x00, 0x00]) },
			{ id: '25', label: 'PVW/DSK', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x10, 0x00, 0x05, 0x00, 0x19, 0x00, 0x00, 0x00]) },
		];

		//3200 HDMI3
		this.CHOICES_SWITCH_HDMI3_3200 = [
			{ id: '28', label: 'MultiV', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x11, 0x00, 0x05, 0x00, 0x1c, 0x00, 0x00, 0x00]) },
			{ id: '29', label: 'MultiV2', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x11, 0x00, 0x05, 0x00, 0x1d, 0x00, 0x00, 0x00]) },
			{ id: '0', label: 'Black', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x11, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00]) },
			{ id: '1', label: 'In 1', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x11, 0x00, 0x05, 0x00, 0x01, 0x00, 0x00, 0x00]) },
			{ id: '2', label: 'In 2', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x11, 0x00, 0x05, 0x00, 0x02, 0x00, 0x00, 0x00]) },
			{ id: '3', label: 'In 3', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x11, 0x00, 0x05, 0x00, 0x03, 0x00, 0x00, 0x00]) },
			{ id: '4', label: 'In 4', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x11, 0x00, 0x05, 0x00, 0x04, 0x00, 0x00, 0x00]) },
			{ id: '5', label: 'In 5', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x11, 0x00, 0x05, 0x00, 0x05, 0x00, 0x00, 0x00]) },
			{ id: '6', label: 'In 6', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x11, 0x00, 0x05, 0x00, 0x06, 0x00, 0x00, 0x00]) },
			{ id: '7', label: 'In 7', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x11, 0x00, 0x05, 0x00, 0x07, 0x00, 0x00, 0x00]) },
			{ id: '8', label: 'In 8', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x11, 0x00, 0x05, 0x00, 0x08, 0x00, 0x00, 0x00]) },
			{ id: '9', label: 'In 9', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x11, 0x00, 0x05, 0x00, 0x09, 0x00, 0x00, 0x00]) },
			{ id: '10', label: 'In 10', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x11, 0x00, 0x05, 0x00, 0x0a, 0x00, 0x00, 0x00]) },
			{ id: '11', label: 'In 11', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x11, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00]) },
			{ id: '12', label: 'In 12', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x11, 0x00, 0x05, 0x00, 0x0c, 0x00, 0x00, 0x00]) },
			{ id: '19', label: 'Still 1', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x11, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00]) },
			{ id: '20', label: 'Still 2', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x11, 0x00, 0x05, 0x00, 0x14, 0x00, 0x00, 0x00]) },
			{ id: '18', label: 'Flex', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x11, 0x00, 0x05, 0x00, 0x12, 0x00, 0x00, 0x00]) },
			{ id: '16', label: 'Clean PGM', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x11, 0x00, 0x05, 0x00, 0x1a, 0x00, 0x00, 0x00]) },
			{ id: '27', label: 'Clean PVW', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x11, 0x00, 0x05, 0x00, 0x1b, 0x00, 0x00, 0x00]) },
			{ id: '22', label: 'PGM Out', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x11, 0x00, 0x05, 0x00, 0x16, 0x00, 0x00, 0x00]) },
			{ id: '23', label: 'PVW Out', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x11, 0x00, 0x05, 0x00, 0x17, 0x00, 0x00, 0x00]) },
			{ id: '24', label: 'PGM/DSK', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x11, 0x00, 0x05, 0x00, 0x18, 0x00, 0x00, 0x00]) },
			{ id: '25', label: 'PVW/DSK', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x11, 0x00, 0x05, 0x00, 0x19, 0x00, 0x00, 0x00]) },
		];
		//3200 Keyer
		this.CHOICES_KEYER_3200 = [

			{ id: '0', label: 'DSK 1 PGM ON', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x99, 0x00, 0x02, 0x00, 0x01, 0x00, 0x00, 0x00]) },
			{ id: '1', label: 'DSK 1 PGM OFF', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x99, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00]) },
			{ id: '2', label: 'DSK 1 PVW ON', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0xbd, 0x00, 0x02, 0x00, 0x01, 0x00, 0x00, 0x00]) },
			{ id: '3', label: 'DSK 1 PVW OFF', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0xbd, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00]) },

			{ id: '4', label: 'DSK 2 PGM ON', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0xab, 0x00, 0x02, 0x00, 0x01, 0x00, 0x00, 0x00]) },
			{ id: '5', label: 'DSK 2 PGM OFF', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0xab, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00]) },
			{ id: '6', label: 'DSK 2 PVW ON', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0xbe, 0x00, 0x02, 0x00, 0x01, 0x00, 0x00, 0x00]) },
			{ id: '7', label: 'DSK 2 PVW OFF', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0xbe, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00]) },

			{ id: '8', label: 'KEY 1 PGM ON', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x13, 0x00, 0x02, 0x00, 0x01, 0x00, 0x00, 0x00]) },
			{ id: '9', label: 'KEY 1 PGM OFF', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x13, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00]) },
			{ id: '10', label: 'KEY 1 PVW ON', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x8c, 0x00, 0x02, 0x00, 0x01, 0x00, 0x00, 0x00]) },
			{ id: '11', label: 'KEY 1 PVW OFF', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x8c, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00]) },

			{ id: '12', label: 'KEY 2 PGM ON', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x31, 0x00, 0x02, 0x00, 0x01, 0x00, 0x00, 0x00]) },
			{ id: '13', label: 'KEY 2 PGM OFF', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x31, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00]) },
			{ id: '14', label: 'KEY 2 PVW ON', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x8d, 0x00, 0x02, 0x00, 0x01, 0x00, 0x00, 0x00]) },
			{ id: '15', label: 'KEY 2 PVW OFF', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x8d, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00]) },

			{ id: '16', label: 'KEY 3 PGM ON', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x4f, 0x00, 0x02, 0x00, 0x01, 0x00, 0x00, 0x00]) },
			{ id: '17', label: 'KEY 3 PGM OFF', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x4f, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00]) },
			{ id: '18', label: 'KEY 3 PVW ON', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x8e, 0x00, 0x02, 0x00, 0x01, 0x00, 0x00, 0x00]) },
			{ id: '19', label: 'KEY 3 PVW OFF', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x8e, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00]) },

			{ id: '20', label: 'KEY 4 PGM ON', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x6d, 0x00, 0x02, 0x00, 0x01, 0x00, 0x00, 0x00]) },
			{ id: '21', label: 'KEY 4 PGM OFF', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x6d, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00]) },
			{ id: '22', label: 'KEY 4 PVW ON', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x8f, 0x00, 0x02, 0x00, 0x01, 0x00, 0x00, 0x00]) },
			{ id: '23', label: 'KEY 4 PVW OFF', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x8f, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00]) },
		];


		// 3200 Fade to Black
		this.CHOICES_FTB_3200 = [
			{ id: '0', label: 'FTB ENABLE ON', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0xc3, 0x00, 0x02, 0x00, 0x01, 0x00, 0x00, 0x00]) },
			{ id: '1', label: 'FTB ENABLE OFF', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0xc3, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00]) },
			{ id: '2', label: 'FTB', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x07, 0x00, 0x01, 0x00, 0x00, 0x00]) },
		];
		// 3200 Logo
		this.CHOICES_LOGO_3200 = [
			{ id: '0', label: 'LOGO 1 ON', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x00, 0x04, 0x02, 0x00, 0x01, 0x00, 0x00, 0x00]) },
			{ id: '1', label: 'LOGO 1 OFF', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x00, 0x04, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00]) },
			{ id: '2', label: 'LOGO 2 ON', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x03, 0x04, 0x02, 0x00, 0x01, 0x00, 0x00, 0x00]) },
			{ id: '3', label: 'LOGO 2 OFF', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x03, 0x04, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00]) },
		];

		// 3200 Audio
		this.CHOICES_AUDIO_3200 = [
			{ id: '0', label: 'External', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00]) },
			{ id: '1', label: 'Follow', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x01, 0x00, 0x00, 0x00]) },
			{ id: '2', label: 'In 1', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x02, 0x00, 0x00, 0x00]) },
			{ id: '3', label: 'In 2', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x03, 0x00, 0x00, 0x00]) },
			{ id: '4', label: 'In 3', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x04, 0x00, 0x00, 0x00]) },
			{ id: '5', label: 'In 4', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x05, 0x00, 0x00, 0x00]) },
			{ id: '6', label: 'In 5', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x06, 0x00, 0x00, 0x00]) },
			{ id: '7', label: 'In 6', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x02, 0x00, 0x00, 0x00]) },
			{ id: '30', label: 'In 7', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x02, 0x00, 0x00, 0x00]) },
			{ id: '31', label: 'In 8', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x00, 0x02, 0x00, 0x00, 0x00]) },
			{ id: '32', label: 'In 9', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x02, 0x00, 0x00, 0x00]) },
			{ id: '33', label: 'In 10', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x02, 0x00, 0x00, 0x00]) },
			{ id: '34', label: 'In 11', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x02, 0x00, 0x00, 0x00]) },
			{ id: '35', label: 'In 12', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x02, 0x00, 0x00, 0x00]) },
			{ id: '8', label: 'External Audio ON', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x06, 0x00, 0x02, 0x00, 0x00, 0x00]) },
			{ id: '9', label: 'External Audio OFF', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x06, 0x00, 0x01, 0x00, 0x00, 0x00]) },
			{ id: '36', label: 'External Audio Test', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x06, 0x00, 0x02, 0x00, 0x00, 0x00]) },
			{ id: '10', label: 'SDI 1 Audio ON', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x06, 0x00, 0x01, 0x00, 0x00, 0x00]) },
			{ id: '11', label: 'SDI 1 Audio OFF', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00]) },
			{ id: '14', label: 'HDMI 1 Audio ON', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x12, 0x00, 0x06, 0x00, 0x01, 0x00, 0x00, 0x00]) },
			{ id: '15', label: 'HDMI 1 Audio OFF', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x12, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00]) },
			{ id: '37', label: 'V Fade', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x07, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00]) },
			{ id: '38', label: 'X Fade', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x07, 0x00, 0x06, 0x00, 0x01, 0x00, 0x00, 0x00]) },
		];


		////1200////
		// Switch 1200 Program Bus  , 0x10, 0x00, 0x08, 0x00, 0x01, 0x00, 0x00, 0x00
		//  ,0x18 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x56 0x00 0x02 0x00 0x02 0x00 0x00 0x00 0x10 0x00 0x08 0x00 0x01 0x00 0x00 0x00
		// ,0x28 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x0a ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x0d ,0x00 ,0x00 ,0x00 ,0x04 ,0x00 ,0x00 ,0x00 ,0x56 ,0x00 ,0x02 ,0x00 ,0x04 ,0x00 ,0x00 ,0x00 ,0x04 ,0x00 ,0x08 ,0x00 ,0x7c ,0x00 ,0x00 ,0x00
		this.CHOICES_SWITCH_PGM_1200 = [
			{ id: '0', label: 'Black', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x56, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00]) },
			{ id: '1', label: 'In 1', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x56, 0x00, 0x02, 0x00, 0x01, 0x00, 0x00, 0x00]) },
			{ id: '2', label: 'In 2', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x56, 0x00, 0x02, 0x00, 0x02, 0x00, 0x00, 0x00]) },
			{ id: '3', label: 'In 3', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x56, 0x00, 0x02, 0x00, 0x03, 0x00, 0x00, 0x00]) },
			{ id: '4', label: 'In 4', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x56, 0x00, 0x02, 0x00, 0x04, 0x00, 0x00, 0x00]) },
			{ id: '5', label: 'In 5', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x56, 0x00, 0x02, 0x00, 0x05, 0x00, 0x00, 0x00]) },
			{ id: '6', label: 'In 6', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x56, 0x00, 0x02, 0x00, 0x06, 0x00, 0x00, 0x00]) },
			{ id: '17', label: 'Matte', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x56, 0x00, 0x02, 0x00, 0x011, 0x00, 0x00, 0x00]) },
			{ id: '18', label: 'Bars', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x56, 0x00, 0x02, 0x00, 0x12, 0x00, 0x00, 0x00]) },
		];

		// Switch 1200 Preview Bus
		this.CHOICES_SWITCH_PVW_1200 = [
			{ id: '0', label: 'Black', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x57, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00]) },
			{ id: '1', label: 'In 1', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x57, 0x00, 0x02, 0x00, 0x01, 0x00, 0x00, 0x00]) },
			{ id: '2', label: 'In 2', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x57, 0x00, 0x02, 0x00, 0x02, 0x00, 0x00, 0x00]) },
			{ id: '3', label: 'In 3', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x57, 0x00, 0x02, 0x00, 0x03, 0x00, 0x00, 0x00]) },
			{ id: '4', label: 'In 4', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x57, 0x00, 0x02, 0x00, 0x04, 0x00, 0x00, 0x00]) },
			{ id: '5', label: 'In 5', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x57, 0x00, 0x02, 0x00, 0x05, 0x00, 0x00, 0x00]) },
			{ id: '6', label: 'In 6', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x57, 0x00, 0x02, 0x00, 0x06, 0x00, 0x00, 0x00]) },
			{ id: '17', label: 'Matte', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x57, 0x00, 0x02, 0x00, 0x011, 0x00, 0x00, 0x00]) },
			{ id: '18', label: 'Bars', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x57, 0x00, 0x02, 0x00, 0x12, 0x00, 0x00, 0x00]) },
		];
		// Switch 1200 Key 1 Aux Bus
		this.CHOICES_SWITCH_KEY1_1200 = [
			{ id: '0', label: 'Black', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x14, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00]) },
			{ id: '1', label: 'In 1', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x14, 0x00, 0x02, 0x00, 0x01, 0x00, 0x00, 0x00]) },
			{ id: '2', label: 'In 2', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x14, 0x00, 0x02, 0x00, 0x02, 0x00, 0x00, 0x00]) },
			{ id: '3', label: 'In 3', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x14, 0x00, 0x02, 0x00, 0x03, 0x00, 0x00, 0x00]) },
			{ id: '4', label: 'In 4', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x14, 0x00, 0x02, 0x00, 0x04, 0x00, 0x00, 0x00]) },
			{ id: '5', label: 'In 5', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x14, 0x00, 0x02, 0x00, 0x05, 0x00, 0x00, 0x00]) },
			{ id: '6', label: 'In 6', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x14, 0x00, 0x02, 0x00, 0x06, 0x00, 0x00, 0x00]) },
			{ id: '17', label: 'Matte', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x14, 0x00, 0x02, 0x00, 0x11, 0x00, 0x00, 0x00]) },
			{ id: '18', label: 'Bars', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x14, 0x00, 0x02, 0x00, 0x12, 0x00, 0x00, 0x00]) },
		];
		// Switch 1200 Key 2 Aux Bus
		this.CHOICES_SWITCH_KEY2_1200 = [
			{ id: '0', label: 'Black', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00]) },
			{ id: '1', label: 'In 1', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x02, 0x00, 0x01, 0x00, 0x00, 0x00]) },
			{ id: '2', label: 'In 2', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x02, 0x00, 0x02, 0x00, 0x00, 0x00]) },
			{ id: '3', label: 'In 3', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x02, 0x00, 0x03, 0x00, 0x00, 0x00]) },
			{ id: '4', label: 'In 4', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x02, 0x00, 0x04, 0x00, 0x00, 0x00]) },
			{ id: '5', label: 'In 5', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x02, 0x00, 0x05, 0x00, 0x00, 0x00]) },
			{ id: '6', label: 'In 6', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x02, 0x00, 0x06, 0x00, 0x00, 0x00]) },
			{ id: '17', label: 'Matte', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x02, 0x00, 0x11, 0x00, 0x00, 0x00]) },
			{ id: '18', label: 'Bars', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x02, 0x00, 0x12, 0x00, 0x00, 0x00]) },
		];
		// Switch 1200 DSK 1 Aux Bus
		this.CHOICES_SWITCH_DSK1_1200 = [
			{ id: '0', label: 'Black', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x5c, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00]) },
			{ id: '1', label: 'In 1', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x5c, 0x00, 0x02, 0x00, 0x01, 0x00, 0x00, 0x00]) },
			{ id: '2', label: 'In 2', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x5c, 0x00, 0x02, 0x00, 0x02, 0x00, 0x00, 0x00]) },
			{ id: '3', label: 'In 3', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x5c, 0x00, 0x02, 0x00, 0x03, 0x00, 0x00, 0x00]) },
			{ id: '4', label: 'In 4', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x5c, 0x00, 0x02, 0x00, 0x04, 0x00, 0x00, 0x00]) },
			{ id: '5', label: 'In 5', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x5c, 0x00, 0x02, 0x00, 0x05, 0x00, 0x00, 0x00]) },
			{ id: '6', label: 'In 6', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x5c, 0x00, 0x02, 0x00, 0x06, 0x00, 0x00, 0x00]) },
			{ id: '17', label: 'Matte', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x5c, 0x00, 0x02, 0x00, 0x11, 0x00, 0x00, 0x00]) },
			{ id: '18', label: 'Bars', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x5c, 0x00, 0x02, 0x00, 0x12, 0x00, 0x00, 0x00]) },
		];
		// Switch 1200 DSK 2 Aux Bus
		this.CHOICES_SWITCH_DSK2_1200 = [
			{ id: '0', label: 'Black', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x6e, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00]) },
			{ id: '1', label: 'In 1', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x6e, 0x00, 0x02, 0x00, 0x01, 0x00, 0x00, 0x00]) },
			{ id: '2', label: 'In 2', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x6e, 0x00, 0x02, 0x00, 0x02, 0x00, 0x00, 0x00]) },
			{ id: '3', label: 'In 3', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x6e, 0x00, 0x02, 0x00, 0x03, 0x00, 0x00, 0x00]) },
			{ id: '4', label: 'In 4', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x6e, 0x00, 0x02, 0x00, 0x04, 0x00, 0x00, 0x00]) },
			{ id: '5', label: 'In 5', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x6e, 0x00, 0x02, 0x00, 0x05, 0x00, 0x00, 0x00]) },
			{ id: '6', label: 'In 6', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x6e, 0x00, 0x02, 0x00, 0x06, 0x00, 0x00, 0x00]) },
			{ id: '17', label: 'Matte', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x6e, 0x00, 0x02, 0x00, 0x11, 0x00, 0x00, 0x00]) },
			{ id: '18', label: 'Bars', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x6e, 0x00, 0x02, 0x00, 0x12, 0x00, 0x00, 0x00]) },
		];

		// Switch 1200 HDMI1 OUTPUT 1000000000000000100005001b000000
		this.CHOICES_SWITCH_HDMI1_1200 = [
			{ id: '27', label: 'MultiV', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x05, 0x00, 0x1b, 0x00, 0x00, 0x00]) },
			{ id: '21', label: 'PGM', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x05, 0x00, 0x15, 0x00, 0x00, 0x00]) },
			{ id: '22', label: 'PVW', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x05, 0x00, 0x16, 0x00, 0x00, 0x00]) },
			{ id: '23', label: 'PGM+DSK', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x05, 0x00, 0x17, 0x00, 0x00, 0x00]) },
			{ id: '24', label: 'PVW+DSK', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x05, 0x00, 0x18, 0x00, 0x00, 0x00]) },
			{ id: '25', label: 'Clean PGM', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x05, 0x00, 0x19, 0x00, 0x00, 0x00]) },
			{ id: '26', label: 'Clean PVW', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x05, 0x00, 0x1a, 0x00, 0x00, 0x00]) },
			{ id: '1', label: 'In 1', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x05, 0x00, 0x01, 0x00, 0x00, 0x00]) },
			{ id: '2', label: 'In 2', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x05, 0x00, 0x02, 0x00, 0x00, 0x00]) },
			{ id: '3', label: 'In 3', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x05, 0x00, 0x03, 0x00, 0x00, 0x00]) },
			{ id: '4', label: 'In 4', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x05, 0x00, 0x04, 0x00, 0x00, 0x00]) },
			{ id: '5', label: 'In 5', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x05, 0x00, 0x05, 0x00, 0x00, 0x00]) },
			{ id: '6', label: 'In 6', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x05, 0x00, 0x06, 0x00, 0x00, 0x00]) },

		];

		this.CHOICES_SWITCH_SDI1_1200 = [
			{ id: '27', label: 'MultiV', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x10, 0x00, 0x05, 0x00, 0x1b, 0x00, 0x00, 0x00]) },
			{ id: '21', label: 'PGM', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x10, 0x00, 0x05, 0x00, 0x15, 0x00, 0x00, 0x00]) },
			{ id: '22', label: 'PVW', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x10, 0x00, 0x05, 0x00, 0x16, 0x00, 0x00, 0x00]) },
			{ id: '23', label: 'PGM+DSK', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x10, 0x00, 0x05, 0x00, 0x17, 0x00, 0x00, 0x00]) },
			{ id: '24', label: 'PVW+DSK', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x10, 0x00, 0x05, 0x00, 0x18, 0x00, 0x00, 0x00]) },
			{ id: '25', label: 'Clean PGM', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x10, 0x00, 0x05, 0x00, 0x19, 0x00, 0x00, 0x00]) },
			{ id: '26', label: 'Clean PVW', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x10, 0x00, 0x05, 0x00, 0x1a, 0x00, 0x00, 0x00]) },
			{ id: '1', label: 'In 1', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x10, 0x00, 0x05, 0x00, 0x01, 0x00, 0x00, 0x00]) },
			{ id: '2', label: 'In 2', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x10, 0x00, 0x05, 0x00, 0x02, 0x00, 0x00, 0x00]) },
			{ id: '3', label: 'In 3', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x10, 0x00, 0x05, 0x00, 0x03, 0x00, 0x00, 0x00]) },
			{ id: '4', label: 'In 4', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x10, 0x00, 0x05, 0x00, 0x04, 0x00, 0x00, 0x00]) },
			{ id: '5', label: 'In 5', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x10, 0x00, 0x05, 0x00, 0x05, 0x00, 0x00, 0x00]) },
			{ id: '6', label: 'In 6', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x10, 0x00, 0x05, 0x00, 0x06, 0x00, 0x00, 0x00]) },

		];

		this.CHOICES_SWITCH_SDI2_1200 = [
			{ id: '27', label: 'MultiV', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x11, 0x00, 0x05, 0x00, 0x1b, 0x00, 0x00, 0x00]) },
			{ id: '21', label: 'PGM', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x11, 0x00, 0x05, 0x00, 0x15, 0x00, 0x00, 0x00]) },
			{ id: '22', label: 'PVW', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x11, 0x00, 0x05, 0x00, 0x16, 0x00, 0x00, 0x00]) },
			{ id: '23', label: 'PGM+DSK', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x11, 0x00, 0x05, 0x00, 0x17, 0x00, 0x00, 0x00]) },
			{ id: '24', label: 'PVW+DSK', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x11, 0x00, 0x05, 0x00, 0x18, 0x00, 0x00, 0x00]) },
			{ id: '25', label: 'Clean PGM', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x11, 0x00, 0x05, 0x00, 0x19, 0x00, 0x00, 0x00]) },
			{ id: '26', label: 'Clean PVW', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x11, 0x00, 0x05, 0x00, 0x1a, 0x00, 0x00, 0x00]) },
			{ id: '1', label: 'In 1', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x11, 0x00, 0x05, 0x00, 0x01, 0x00, 0x00, 0x00]) },
			{ id: '2', label: 'In 2', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x11, 0x00, 0x05, 0x00, 0x02, 0x00, 0x00, 0x00]) },
			{ id: '3', label: 'In 3', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x11, 0x00, 0x05, 0x00, 0x03, 0x00, 0x00, 0x00]) },
			{ id: '4', label: 'In 4', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x11, 0x00, 0x05, 0x00, 0x04, 0x00, 0x00, 0x00]) },
			{ id: '5', label: 'In 5', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x11, 0x00, 0x05, 0x00, 0x05, 0x00, 0x00, 0x00]) },
			{ id: '6', label: 'In 6', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x11, 0x00, 0x05, 0x00, 0x06, 0x00, 0x00, 0x00]) },

		];
		// 1200 Transistion Controls
		this.CHOICES_TRANS_1200 = [
			{ id: '0', label: 'Auto', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x01, 0x00, 0x00, 0x00]) },
			{ id: '1', label: 'Cut', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x05, 0x00, 0x00, 0x00]) },
			{ id: '2', label: 'DSK Auto', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x05, 0x00, 0x07, 0x00, 0x01, 0x00, 0x00, 0x00]) },
			{ id: '3', label: 'DSK Cut', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x05, 0x00, 0x07, 0x00, 0x05, 0x00, 0x00, 0x00]) },
			{ id: '4', label: 'Mix', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x58, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00]) },
			{ id: '5', label: 'Wipe', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x58, 0x00, 0x02, 0x00, 0x01, 0x00, 0x00, 0x00]) },
			{ id: '6', label: 'Clip', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x58, 0x00, 0x02, 0x00, 0x02, 0x00, 0x00, 0x00]) },
			{ id: '7', label: 'NORM REV ON', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x55, 0x00, 0x02, 0x00, 0x01, 0x00, 0x00, 0x00]) },
			{ id: '8', label: 'NORM REV OFF', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x55, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00]) },
			{ id: '9', label: 'REV ON', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x54, 0x00, 0x02, 0x00, 0x01, 0x00, 0x00, 0x00]) },
			{ id: '10', label: 'REV OFF', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x54, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00]) },
			{ id: '11', label: 'TRANS PVW ON', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x53, 0x00, 0x02, 0x00, 0x01, 0x00, 0x00, 0x00]) },
			{ id: '12', label: 'TRANS PVW OFF', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x53, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00]) },
			{ id: '13', label: 'KEY PRIORITY ON', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x52, 0x00, 0x02, 0x00, 0x01, 0x00, 0x00, 0x00]) },
			{ id: '14', label: 'KEY PRIORITY OFF', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x52, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00]) },
			{ id: '40', label: 'BACKGROUND ON', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x4f, 0x00, 0x02, 0x00, 0x01, 0x00, 0x00, 0x00]) },
			{ id: '41', label: 'BACKGROUND OFF', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x4f, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00]) },
		];
		// 1200 Fade to Black
		this.CHOICES_FTB_1200 = [
			{ id: '0', label: 'FTB ENABLE ON', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x85, 0x00, 0x02, 0x00, 0x01, 0x00, 0x00, 0x00]) },
			{ id: '1', label: 'FTB ENABLE OFF', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x85, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00]) },
			{ id: '2', label: 'FTB', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x07, 0x00, 0x01, 0x00, 0x00, 0x00]) },
		];
		// 1200 Keyer
		this.CHOICES_KEYER_1200 = [
			{ id: '0', label: 'DSK 1 PGM ON', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x5b, 0x00, 0x02, 0x00, 0x01, 0x00, 0x00, 0x00]) },
			{ id: '1', label: 'DSK 1 PGM OFF', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x5b, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00]) },
			{ id: '2', label: 'DSK 1 PVW ON', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x7f, 0x00, 0x02, 0x00, 0x01, 0x00, 0x00, 0x00]) },
			{ id: '3', label: 'DSK 1 PVW OFF', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x7f, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00]) },

			{ id: '4', label: 'DSK 2 PGM ON', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x6d, 0x00, 0x02, 0x00, 0x01, 0x00, 0x00, 0x00]) },
			{ id: '5', label: 'DSK 2 PGM OFF', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x6d, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00]) },
			{ id: '6', label: 'DSK 2 PVW ON', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x80, 0x00, 0x02, 0x00, 0x01, 0x00, 0x00, 0x00]) },
			{ id: '7', label: 'DSK 2 PVW OFF', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x80, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00]) },

			{ id: '8', label: 'KEY 1 PGM ON', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x13, 0x00, 0x02, 0x00, 0x01, 0x00, 0x00, 0x00]) },
			{ id: '9', label: 'KEY 1 PGM OFF', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x13, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00]) },
			{ id: '10', label: 'KEY 1 PVW ON', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x50, 0x00, 0x02, 0x00, 0x01, 0x00, 0x00, 0x00]) },
			{ id: '11', label: 'KEY 1 PVW OFF', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x50, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00]) },

			{ id: '12', label: 'KEY 2 PGM ON', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x31, 0x00, 0x02, 0x00, 0x01, 0x00, 0x00, 0x00,]) },
			{ id: '13', label: 'KEY 2 PGM OFF', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x31, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00]) },
			{ id: '14', label: 'KEY 2 PVW ON', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x51, 0x00, 0x02, 0x00, 0x01, 0x00, 0x00, 0x00]) },
			{ id: '15', label: 'KEY 2 PVW OFF', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x51, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00]) },
		];

		// 1200 Streamer
		this.CHOICES_STREAMER_1200 = [
			{ id: '0', label: 'Streamer Start', cmd: Buffer.from([0x0f, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00]) },
			{ id: '1', label: 'Streamer Stop', cmd: Buffer.from([0x0f, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00]) },
			{ id: '2', label: 'Full', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00]) },
			{ id: '3', label: 'Half', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x0c, 0x00, 0x01, 0x00, 0x00, 0x00]) },
			{ id: '4', label: 'Quarter', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x0c, 0x00, 0x02, 0x00, 0x00, 0x00]) },
			{ id: '5', label: 'Sixth', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x0c, 0x00, 0x03, 0x00, 0x00, 0x00]) },
		];
		// 1200 Audio
		this.CHOICES_AUDIO_1200 = [
			{ id: '0', label: 'External', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00]) },
			{ id: '1', label: 'Follow', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x01, 0x00, 0x00, 0x00]) },
			{ id: '2', label: 'In 1', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x02, 0x00, 0x00, 0x00]) },
			{ id: '3', label: 'In 2', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x03, 0x00, 0x00, 0x00]) },
			{ id: '4', label: 'In 3', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x04, 0x00, 0x00, 0x00]) },
			{ id: '5', label: 'In 4', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x05, 0x00, 0x00, 0x00]) },
			{ id: '6', label: 'In 5', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x06, 0x00, 0x00, 0x00]) },
			{ id: '7', label: 'In 6', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x02, 0x00, 0x00, 0x00]) },
			{ id: '8', label: 'External Audio ON', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x06, 0x00, 0x02, 0x00, 0x00, 0x00]) },
			{ id: '9', label: 'External Audio OFF', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00]) },
			{ id: '10', label: 'SDI 1 Audio ON', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x04, 0x00, 0x06, 0x00, 0x01, 0x00, 0x00, 0x00]) },
			{ id: '11', label: 'SDI 1 Audio OFF', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x04, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00]) },
			{ id: '12', label: 'SDI 2 Audio ON', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x05, 0x00, 0x06, 0x00, 0x01, 0x00, 0x00, 0x00]) },
			{ id: '13', label: 'SDI 2 Audio OFF', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x05, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00]) },
			{ id: '14', label: 'HDMI 1 Audio ON', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x06, 0x00, 0x06, 0x00, 0x01, 0x00, 0x00, 0x00]) },
			{ id: '15', label: 'HDMI 1 Audio OFF', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x06, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00]) },
			{ id: '16', label: 'Audio Level Auto', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x15, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00]) },
			{ id: '17', label: 'Audio Level SMPTE', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x15, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00]) },
			{ id: '18', label: 'Audio Level EBU', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x15, 0x00, 0x01, 0x00, 0x02, 0x00, 0x00, 0x00]) },
		];
		////700////


		//Switch 700 Program Bus
		this.CHOICES_SWITCH_PGM_700 = [
			{ id: '0', label: 'Black', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x56, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00]) },
			{ id: '1', label: 'In 1', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x56, 0x00, 0x02, 0x00, 0x01, 0x00, 0x00, 0x00]) },
			{ id: '2', label: 'In 2', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x56, 0x00, 0x02, 0x00, 0x02, 0x00, 0x00, 0x00]) },
			{ id: '3', label: 'In 3', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x56, 0x00, 0x02, 0x00, 0x03, 0x00, 0x00, 0x00]) },
			{ id: '4', label: 'In 4', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x56, 0x00, 0x02, 0x00, 0x04, 0x00, 0x00, 0x00]) },
			{ id: '5', label: 'Still', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x56, 0x00, 0x02, 0x00, 0x05, 0x00, 0x00, 0x00]) },
			{ id: '6', label: 'Freeze', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x56, 0x00, 0x02, 0x00, 0x06, 0x00, 0x00, 0x00]) },
			{ id: '17', label: 'Matte', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x56, 0x00, 0x02, 0x00, 0x011, 0x00, 0x00, 0x00]) },

		];

		this.CHOICES_SWITCH_PVW_700 = [
			{ id: '0', label: 'Black', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x57, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00]) },
			{ id: '1', label: 'In 1', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x57, 0x00, 0x02, 0x00, 0x01, 0x00, 0x00, 0x00]) },
			{ id: '2', label: 'In 2', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x57, 0x00, 0x02, 0x00, 0x02, 0x00, 0x00, 0x00]) },
			{ id: '3', label: 'In 3', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x57, 0x00, 0x02, 0x00, 0x03, 0x00, 0x00, 0x00]) },
			{ id: '4', label: 'In 4', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x57, 0x00, 0x02, 0x00, 0x04, 0x00, 0x00, 0x00]) },
			{ id: '5', label: 'Still', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x57, 0x00, 0x02, 0x00, 0x05, 0x00, 0x00, 0x00]) },
			{ id: '6', label: 'Freeze', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x57, 0x00, 0x02, 0x00, 0x06, 0x00, 0x00, 0x00]) },
			{ id: '17', label: 'Matte', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x57, 0x00, 0x02, 0x00, 0x011, 0x00, 0x00, 0x00]) },

		];

		// Switch 700 Key 1 Aux Bus
		this.CHOICES_SWITCH_KEY1_700 = [
			{ id: '0', label: 'Black', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x14, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00]) },
			{ id: '1', label: 'In 1', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x14, 0x00, 0x02, 0x00, 0x01, 0x00, 0x00, 0x00]) },
			{ id: '2', label: 'In 2', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x14, 0x00, 0x02, 0x00, 0x02, 0x00, 0x00, 0x00]) },
			{ id: '3', label: 'In 3', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x14, 0x00, 0x02, 0x00, 0x03, 0x00, 0x00, 0x00]) },
			{ id: '4', label: 'In 4', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x14, 0x00, 0x02, 0x00, 0x04, 0x00, 0x00, 0x00]) },
			{ id: '5', label: 'Still', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x14, 0x00, 0x02, 0x00, 0x05, 0x00, 0x00, 0x00]) },
			{ id: '6', label: 'Freeze', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x14, 0x00, 0x02, 0x00, 0x06, 0x00, 0x00, 0x00]) },
			{ id: '17', label: 'BG', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x14, 0x00, 0x02, 0x00, 0x11, 0x00, 0x00, 0x00]) },
		];
		// Switch 1200 Key 2 (PIP) Aux Bus
		this.CHOICES_SWITCH_PIP_700 = [
			{ id: '0', label: 'Black', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00]) },
			{ id: '1', label: 'In 1', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x02, 0x00, 0x01, 0x00, 0x00, 0x00]) },
			{ id: '2', label: 'In 2', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x02, 0x00, 0x02, 0x00, 0x00, 0x00]) },
			{ id: '3', label: 'In 3', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x02, 0x00, 0x03, 0x00, 0x00, 0x00]) },
			{ id: '4', label: 'In 4', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x02, 0x00, 0x04, 0x00, 0x00, 0x00]) },
			{ id: '5', label: 'Still', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x02, 0x00, 0x05, 0x00, 0x00, 0x00]) },
			{ id: '6', label: 'Freeze', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x02, 0x00, 0x06, 0x00, 0x00, 0x00]) },
			{ id: '17', label: 'BG', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x02, 0x00, 0x11, 0x00, 0x00, 0x00]) },
		];
		// Switch 1200 DSK 1 Aux Bus
		this.CHOICES_SWITCH_DSK1_700 = [
			{ id: '0', label: 'Black', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x5c, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00]) },
			{ id: '1', label: 'In 1', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x5c, 0x00, 0x02, 0x00, 0x01, 0x00, 0x00, 0x00]) },
			{ id: '2', label: 'In 2', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x5c, 0x00, 0x02, 0x00, 0x02, 0x00, 0x00, 0x00]) },
			{ id: '3', label: 'In 3', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x5c, 0x00, 0x02, 0x00, 0x03, 0x00, 0x00, 0x00]) },
			{ id: '4', label: 'In 4', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x5c, 0x00, 0x02, 0x00, 0x04, 0x00, 0x00, 0x00]) },
			{ id: '5', label: 'Still', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x5c, 0x00, 0x02, 0x00, 0x05, 0x00, 0x00, 0x00]) },
			{ id: '6', label: 'Freeze', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x5c, 0x00, 0x02, 0x00, 0x06, 0x00, 0x00, 0x00]) },
			{ id: '17', label: 'BG', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x5c, 0x00, 0x02, 0x00, 0x11, 0x00, 0x00, 0x00]) },
		];

		this.CHOICES_SWITCH_SDI1_700 = [
			{ id: '27', label: 'MultiV', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x10, 0x00, 0x05, 0x00, 0x1b, 0x00, 0x00, 0x00]) },
			{ id: '21', label: 'PGM', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x10, 0x00, 0x05, 0x00, 0x15, 0x00, 0x00, 0x00]) },
			{ id: '22', label: 'PVW', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x10, 0x00, 0x05, 0x00, 0x16, 0x00, 0x00, 0x00]) },
			{ id: '23', label: 'PG+DSK', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x10, 0x00, 0x05, 0x00, 0x17, 0x00, 0x00, 0x00]) },
			{ id: '24', label: 'PVW+DSK', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x10, 0x00, 0x05, 0x00, 0x18, 0x00, 0x00, 0x00]) },
			{ id: '25', label: 'Clean PGM', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x10, 0x00, 0x05, 0x00, 0x19, 0x00, 0x00, 0x00]) },
			{ id: '26', label: 'Clean PVW', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x10, 0x00, 0x05, 0x00, 0x1a, 0x00, 0x00, 0x00]) },
			{ id: '1', label: 'In 1', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x10, 0x00, 0x05, 0x00, 0x01, 0x00, 0x00, 0x00]) },
			{ id: '2', label: 'In 2', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x10, 0x00, 0x05, 0x00, 0x02, 0x00, 0x00, 0x00]) },
			{ id: '3', label: 'In 3', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x10, 0x00, 0x05, 0x00, 0x03, 0x00, 0x00, 0x00]) },
			{ id: '4', label: 'In 4', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x10, 0x00, 0x05, 0x00, 0x04, 0x00, 0x00, 0x00]) },
			{ id: '5', label: 'Still', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x10, 0x00, 0x02, 0x00, 0x05, 0x00, 0x00, 0x00]) },
			{ id: '6', label: 'Freeze', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x10, 0x00, 0x02, 0x00, 0x06, 0x00, 0x00, 0x00]) },
		];

		this.CHOICES_SWITCH_SDI2_700 = [
			{ id: '27', label: 'MultiV', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x11, 0x00, 0x05, 0x00, 0x1b, 0x00, 0x00, 0x00]) },
			{ id: '21', label: 'PGM', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x11, 0x00, 0x05, 0x00, 0x15, 0x00, 0x00, 0x00]) },
			{ id: '22', label: 'PVW', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x11, 0x00, 0x05, 0x00, 0x16, 0x00, 0x00, 0x00]) },
			{ id: '23', label: 'PG+DSK', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x11, 0x00, 0x05, 0x00, 0x17, 0x00, 0x00, 0x00]) },
			{ id: '24', label: 'PVW+DSK', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x11, 0x00, 0x05, 0x00, 0x18, 0x00, 0x00, 0x00]) },
			{ id: '25', label: 'Clean PGM', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x11, 0x00, 0x05, 0x00, 0x19, 0x00, 0x00, 0x00]) },
			{ id: '26', label: 'Clean PVW', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x11, 0x00, 0x05, 0x00, 0x1a, 0x00, 0x00, 0x00]) },
			{ id: '1', label: 'In 1', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x11, 0x00, 0x05, 0x00, 0x01, 0x00, 0x00, 0x00]) },
			{ id: '2', label: 'In 2', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x11, 0x00, 0x05, 0x00, 0x02, 0x00, 0x00, 0x00]) },
			{ id: '3', label: 'In 3', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x11, 0x00, 0x05, 0x00, 0x03, 0x00, 0x00, 0x00]) },
			{ id: '4', label: 'In 4', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x11, 0x00, 0x05, 0x00, 0x04, 0x00, 0x00, 0x00]) },
			{ id: '5', label: 'Still', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x11, 0x00, 0x02, 0x00, 0x05, 0x00, 0x00, 0x00]) },
			{ id: '6', label: 'Freeze', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x11, 0x00, 0x02, 0x00, 0x06, 0x00, 0x00, 0x00]) },

		];

		this.CHOICES_SWITCH_HDMI1_700 = [
			{ id: '27', label: 'MultiV', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x05, 0x00, 0x1b, 0x00, 0x00, 0x00]) },
			{ id: '21', label: 'PGM', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x05, 0x00, 0x15, 0x00, 0x00, 0x00]) },
			{ id: '22', label: 'PVW', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x05, 0x00, 0x16, 0x00, 0x00, 0x00]) },
			{ id: '23', label: 'PG+DSK', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x05, 0x00, 0x17, 0x00, 0x00, 0x00]) },
			{ id: '24', label: 'PVW+DSK', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x05, 0x00, 0x18, 0x00, 0x00, 0x00]) },
			{ id: '25', label: 'Clean PGM', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x05, 0x00, 0x19, 0x00, 0x00, 0x00]) },
			{ id: '26', label: 'Clean PVW', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x05, 0x00, 0x1a, 0x00, 0x00, 0x00]) },
			{ id: '1', label: 'In 1', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x05, 0x00, 0x01, 0x00, 0x00, 0x00]) },
			{ id: '2', label: 'In 2', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x05, 0x00, 0x02, 0x00, 0x00, 0x00]) },
			{ id: '3', label: 'In 3', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x05, 0x00, 0x03, 0x00, 0x00, 0x00]) },
			{ id: '4', label: 'In 4', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x05, 0x00, 0x04, 0x00, 0x00, 0x00]) },
			{ id: '5', label: 'Still', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x02, 0x00, 0x05, 0x00, 0x00, 0x00]) },
			{ id: '6', label: 'Freeze', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x02, 0x00, 0x06, 0x00, 0x00, 0x00]) },

		];

		// 700 Keyer
		this.CHOICES_KEYER_700 = [
			{ id: '0', label: 'DSK 1 PGM ON', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x5b, 0x00, 0x02, 0x00, 0x01, 0x00, 0x00, 0x00]) },
			{ id: '1', label: 'DSK 1 PGM OFF', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x5b, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00]) },
			{ id: '2', label: 'DSK 1 PVW ON', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x7f, 0x00, 0x02, 0x00, 0x01, 0x00, 0x00, 0x00]) },
			{ id: '3', label: 'DSK 1 PVW OFF', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x7f, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00]) },

			{ id: '8', label: 'KEY 1 PGM ON', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x13, 0x00, 0x02, 0x00, 0x01, 0x00, 0x00, 0x00]) },
			{ id: '9', label: 'KEY 1 PGM OFF', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x13, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00]) },
			{ id: '10', label: 'KEY 1 PVW ON', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x50, 0x00, 0x02, 0x00, 0x01, 0x00, 0x00, 0x00]) },
			{ id: '11', label: 'KEY 1 PVW OFF', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x50, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00]) },

			{ id: '12', label: 'P-in-P PGM ON', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x31, 0x00, 0x02, 0x00, 0x01, 0x00, 0x00, 0x00,]) },
			{ id: '13', label: 'P-in-P PGM OFF', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x31, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00]) },
			{ id: '14', label: 'P-in-P PVW ON', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x51, 0x00, 0x02, 0x00, 0x01, 0x00, 0x00, 0x00]) },
			{ id: '15', label: 'P-in-P PVW OFF', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x51, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00]) },
		];

		// 700 Audio
		this.CHOICES_AUDIO_700 = [
			{ id: '8', label: 'External Audio ON', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x06, 0x00, 0x02, 0x00, 0x00, 0x00]) },
			{ id: '9', label: 'External Audio OFF', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00]) },
			{ id: '10', label: 'SDI 1 Audio ON', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x04, 0x00, 0x06, 0x00, 0x01, 0x00, 0x00, 0x00]) },
			{ id: '11', label: 'SDI 1 Audio OFF', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x04, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00]) },
			{ id: '12', label: 'SDI 2 Audio ON', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x05, 0x00, 0x06, 0x00, 0x01, 0x00, 0x00, 0x00]) },
			{ id: '13', label: 'SDI 2 Audio OFF', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x05, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00]) },
			{ id: '14', label: 'HDMI 1 Audio ON', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x06, 0x00, 0x06, 0x00, 0x01, 0x00, 0x00, 0x00]) },
			{ id: '15', label: 'HDMI 1 Audio OFF', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x06, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00]) },
			{ id: '16', label: 'Audio Level Auto', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x15, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00]) },
			{ id: '17', label: 'Audio Level SMPTE', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x15, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00]) },
			{ id: '18', label: 'Audio Level EBU', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x15, 0x00, 0x01, 0x00, 0x02, 0x00, 0x00, 0x00]) },
		];

		/////650/////
		//650 HDMI 1
		this.CHOICES_SWITCH_SDI1_650 = [
			{ id: '4', label: 'MultiV', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x05, 0x00, 0x04, 0x00, 0x00, 0x00]) },
			{ id: '0', label: 'PGM', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00]) },
			{ id: '1', label: 'PVW', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x05, 0x00, 0x01, 0x00, 0x00, 0x00]) },
			{ id: '2', label: 'PG+DSK', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x05, 0x00, 0x12, 0x00, 0x00, 0x00]) },
			{ id: '3', label: 'PVW+DSK', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00]) },
		];

		//650 HDMI 2
		this.CHOICES_SWITCH_HDMI1_650 = [
			{ id: '4', label: 'MultiV', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x05, 0x00, 0x04, 0x00, 0x00, 0x00]) },
			{ id: '0', label: 'PGM', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00]) },
			{ id: '1', label: 'PVW', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x05, 0x00, 0x01, 0x00, 0x00, 0x00]) },
			{ id: '2', label: 'PG+DSK', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x05, 0x00, 0x12, 0x00, 0x00, 0x00]) },
			{ id: '3', label: 'PVW+DSK', cmd: Buffer.from([0x01, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00]) },
		];

		this.CONFIG_MODEL = {
			se1200mu: {
				id: 'se1200mu', label: 'SE-1200MU',
				pgm: this.CHOICES_SWITCH_PGM_1200,
				pvw: this.CHOICES_SWITCH_PVW_1200,
				key1: this.CHOICES_SWITCH_KEY1_1200,
				key2: this.CHOICES_SWITCH_KEY2_1200,
				dsk1: this.CHOICES_SWITCH_DSK1_1200,
				dsk2: this.CHOICES_SWITCH_DSK2_1200,
				hdmi1: this.CHOICES_SWITCH_HDMI1_1200,
				sdi1: this.CHOICES_SWITCH_SDI1_1200,
				sdi2: this.CHOICES_SWITCH_SDI2_1200,
				trans: this.CHOICES_TRANS_1200,
				ftb: this.CHOICES_FTB_1200,
				keyer: this.CHOICES_KEYER_1200,
				streamer: this.CHOICES_STREAMER_1200,
				audio: this.CHOICES_AUDIO_1200,
			},
			se3200: {
				id: 'se3200', label: 'SE-3200',
				pgm: this.CHOICES_SWITCH_PGM_3200,
				pvw: this.CHOICES_SWITCH_PVW_3200,
				key1: this.CHOICES_SWITCH_KEY1_3200,
				key2: this.CHOICES_SWITCH_KEY2_3200,
				key3: this.CHOICES_SWITCH_KEY3_3200,
				key4: this.CHOICES_SWITCH_KEY4_3200,
				dsk1: this.CHOICES_SWITCH_DSK1_3200,
				dsk2: this.CHOICES_SWITCH_DSK2_3200,
				aux1: this.CHOICES_SWITCH_AUX1_3200,
				aux2: this.CHOICES_SWITCH_AUX2_3200,
				aux3: this.CHOICES_SWITCH_AUX3_3200,
				aux4: this.CHOICES_SWITCH_AUX4_3200,
				hdmi1: this.CHOICES_SWITCH_HDMI1_3200,
				hdmi2: this.CHOICES_SWITCH_HDMI2_3200,
				hdmi3: this.CHOICES_SWITCH_HDMI3_3200,
				sdi1: this.CHOICES_SWITCH_SDI1_3200,
				sdi2: this.CHOICES_SWITCH_SDI2_3200,
				trans: this.CHOICES_TRANS_3200,
				ftb: this.CHOICES_FTB_3200,
				keyer: this.CHOICES_KEYER_3200,
				streamer: this.CHOICES_STREAMER_1200,
				logo: this.CHOICES_LOGO_3200,
				audio: this.CHOICES_AUDIO_3200
			},
			se700: {
				id: 'se700', label: 'SE-700',
				pgm: this.CHOICES_SWITCH_PGM_700,
				pvw: this.CHOICES_SWITCH_PVW_700,
				key1: this.CHOICES_SWITCH_KEY1_700,
				pip: this.CHOICES_SWITCH_PIP_700,
				dsk1: this.CHOICES_SWITCH_DSK1_700,
				sdi1: this.CHOICES_SWITCH_SDI1_700,
				sdi2: this.CHOICES_SWITCH_SDI2_700,
				hdmi1: this.CHOICES_SWITCH_HDMI1_700,
				trans: this.CHOICES_TRANS_700,
				ftb: this.CHOICES_FTB_1200,
				keyer: this.CHOICES_KEYER_700,
				audio: this.CHOICES_AUDIO_700,
			},
			se650: {
				id: 'se650', label: 'SE-650',
				pgm: this.CHOICES_SWITCH_PGM_700,
				pvw: this.CHOICES_SWITCH_PVW_700,
				key1: this.CHOICES_SWITCH_KEY1_700,
				pip: this.CHOICES_SWITCH_PIP_700,
				dsk1: this.CHOICES_SWITCH_DSK1_700,
				sdi1: this.CHOICES_SWITCH_SDI1_650,
				hdmi1: this.CHOICES_SWITCH_HDMI1_650,
				trans: this.CHOICES_TRANS_700,
				ftb: this.CHOICES_FTB_1200,
				keyer: this.CHOICES_KEYER_700,
			},

		};

		this.CHOICES_MODEL = Object.values(this.CONFIG_MODEL);
		// Sort alphabetical
		this.CHOICES_MODEL.sort(function (a, b) {
			var x = a.label.toLowerCase();
			var y = b.label.toLowerCase();
			if (x < y) { return -1; }
			if (x > y) { return 1; }
			return 0;
		});

		if (this.config.modelID !== undefined) {
			this.model = this.CONFIG_MODEL[this.config.modelID];
		}
		else {
			this.config.modelID = 'se1200mu';
			this.model = this.CONFIG_MODEL['se1200mu'];
		}

	}

	actions(system) {
		this.setActions(this.getActions());
	}

	action(action) {
		let cmd;
		let element
		let id = action.action
		let options = action.options;
		let userid = Buffer.alloc(4);
		let pktsize = Buffer.alloc(4);
		let frames = Buffer.alloc(4);
		let cmdsize;

		const lf = '\u000a';

		switch (id) {
			case 'switch_pgm':
				element = this.model.pgm.find(element => element.id === options.switchpgm);
				if (element !== undefined) {
					cmd = element.cmd;
				}
				break;
			case 'switch_pvw':
				element = this.model.pvw.find(element => element.id === options.switchpvw);
				if (element !== undefined) {
					cmd = element.cmd;
				}
				break;
			case 'switch_pip':
				element = this.model.pip.find(element => element.id === options.switchpip);
				if (element !== undefined) {
					cmd = element.cmd;
				}
				break;
			case 'switch_key1':
				element = this.model.key1.find(element => element.id === options.switchkey1);
				if (element !== undefined) {
					cmd = element.cmd;
				}
				break;
			case 'switch_key2':
				element = this.model.key2.find(element => element.id === options.switchkey2);
				if (element !== undefined) {
					cmd = element.cmd;
				}
				break;
			case 'switch_key3':
				element = this.model.key3.find(element => element.id === options.switchkey3);
				if (element !== undefined) {
					cmd = element.cmd;
				}
				break;
			case 'switch_key4':
				element = this.model.key4.find(element => element.id === options.switchkey4);
				if (element !== undefined) {
					cmd = element.cmd;
				}
				break;
			case 'switch_dsk1':
				element = this.model.dsk1.find(element => element.id === options.switchdsk1);
				if (element !== undefined) {
					cmd = element.cmd;
				}
				break;
			case 'switch_dsk2':
				element = this.model.dsk2.find(element => element.id === options.switchdsk2);
				if (element !== undefined) {
					cmd = element.cmd;
				}
				break;
			case 'switch_aux1':
				element = this.model.aux1.find(element => element.id === options.switchaux1);
				if (element !== undefined) {
					cmd = element.cmd;
				}
				break;
			case 'switch_aux2':
				element = this.model.aux2.find(element => element.id === options.switchaux2);
				if (element !== undefined) {
					cmd = element.cmd;
				}
				break;
			case 'switch_aux3':
				element = this.model.aux3.find(element => element.id === options.switchaux3);
				if (element !== undefined) {
					cmd = element.cmd;
				}
				break;
			case 'switch_aux4':
				element = this.model.aux4.find(element => element.id === options.switchaux4);
				if (element !== undefined) {
					cmd = element.cmd;
				}
				break;
			case 'switch_hdmi1':
				element = this.model.hdmi1.find(element => element.id === options.switchhdmi1);
				if (element !== undefined) {
					cmd = element.cmd;
				}
				break;
			case 'switch_hdmi2':
				element = this.model.hdmi2.find(element => element.id === options.switchhdmi2);
				if (element !== undefined) {
					cmd = element.cmd;
				}
				break;
			case 'switch_hdmi3':
				element = this.model.hdmi3.find(element => element.id === options.switchhdmi3);
				if (element !== undefined) {
					cmd = element.cmd;
				}
				break;
			case 'switch_sdi1':
				element = this.model.sdi1.find(element => element.id === options.switchsdi1);
				if (element !== undefined) {
					cmd = element.cmd;
				}
				break;
			case 'switch_sdi2':
				element = this.model.sdi2.find(element => element.id === options.switchsdi2);
				if (element !== undefined) {
					cmd = element.cmd;
				}
				break;
			case 'trans':
				element = this.model.trans.find(element => element.id === options.trans);
				if (element !== undefined) {
					cmd = element.cmd;
				}
				break;
			case 'ftb':
				element = this.model.ftb.find(element => element.id === options.ftb);
				if (element !== undefined) {
					cmd = element.cmd;
				}
				break;
			case 'keyer':
				element = this.model.keyer.find(element => element.id === options.keyer);
				if (element !== undefined) {
					cmd = element.cmd;
				}
				break;
			case 'loaduser':
				userid.writeUInt32LE(options.userid, 0);
				cmd = Buffer.from([0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, userid[0], userid[1], 0x00, 0x00, 0x01, 0x00, 0x08, 0x00, 0x01, 0x00, 0x00, 0x00]);
				break;
			case 'saveuser':
				uuserid.writeUInt32LE(options.userid, 0);
				cmd = Buffer.from([0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, userid[0], userid[1], 0x00, 0x00, 0x01, 0x00, 0x08, 0x00, 0x02, 0x00, 0x00, 0x00]);
				break;
			case 'streamer':
				element = this.model.streamer.find(element => element.id === options.streamer);
				if (element !== undefined) {
					cmd = element.cmd;
				}
				break;
			case 'trans_durations':
				frames.writeUInt32LE(options.frames, 0);
				cmd = Buffer.from([0x01, 0x00, 0x00, 0x00, options.trans, 0x00, 0x07, 0x00, frames[0], frames[1], frames[2], frames[3]]);
				break;
			case 'logo':
				element = this.model.logo.find(element => element.id === options.logo);
				if (element !== undefined) {
					cmd = element.cmd;
				}
				break;
			case 'audio':
				element = this.model.audio.find(element => element.id === options.audio);
				if (element !== undefined) {
					cmd = element.cmd;
				}
				break;
		}

		if (cmd !== undefined) {
			if (this.socket !== undefined && this.socket.connected) {
				//Calculate packet length and prepend
				//Add 4 bytes to include pack size value
				cmdsize = Buffer.byteLength(cmd) + 4;
				pktsize.writeUInt32LE(cmdsize, 0);
				cmd = Buffer.concat([pktsize, cmd], cmdsize);
				//console.log("Send: ", cmd);
				this.socket.send(cmd);
			} else {
				debug('Socket not connected :(');
			}

		}
	}

	// Return config fields for web config
	config_fields() {

		return [
			{
				type: 'text',
				id: 'info',
				width: 12,
				label: 'Information',
				value: 'This module will control a Datavideo vision mixer. Port 5001 can be used if a physical control panel is not connected.'
			},
			{
				type: 'textinput',
				id: 'host',
				label: 'IP Address',
				width: 6,
				default: '192.168.1.101',
				regex: this.REGEX_IP
			},
			{
				type: 'dropdown',
				id: 'port',
				label: 'Port',
				width: 4,
				choices: this.CHOICES_PORT,
				default: '5005',
			},
			{
				type: 'dropdown',
				id: 'modelID',
				label: 'Model',
				width: 6,
				choices: this.CHOICES_MODEL,
				default: 'se1200mu'
			}
		]
	}

	// When module gets deleted
	destroy() {
		if (this.socket !== undefined) {
			this.socket.send(this.disconnect_packet);
			this.socket.destroy();
		}
		if (this.socket_realtime !== undefined) {
			this.socket_realtime.send(this.disconnect_packet);
			this.socket_realtime.destroy();
		}
		debug('destroy', this.id);
	}

	init() {
		debug = this.debug;
		log = this.log;
		this.init_feedbacks();
		this.init_variables();
		this.initTCP();
		this.init_presets();
		this.actions();
	}

	initTCP() {
		if (this.socket !== undefined) {
			this.socket.send(this.disconnect_packet);
			this.socket.destroy();
			delete this.socket;
		}

		if (this.socket_realtime !== undefined) {
			this.socket_realtime.send(this.disconnect_packet);
			this.socket_realtime.destroy();
			delete this.socket_realtime;
		}

		if (this.config.port === undefined) {
			this.config.port = 5005;
		}

		if (this.config.host) {
			this.config.port_cmd = parseInt(this.config.port) + 1;
			this.socket = new tcp(this.config.host, this.config.port_cmd);
			this.socket_realtime = new tcp(this.config.host, this.config.port);

			this.socket.on('status_change', (status, message) => {
				this.status(status, message);
			});

			this.socket.on('error', (err) => {
				debug('Network error', err);
				this.log('error', 'Network error: ' + err.message);
			});

			this.socket.on('connect', () => {
				debug('Connected');
				this.socket.send(this.null_packet);
			});
			this.socket_realtime.on('status_change', (status, message) => {
				this.status(status, message);
			});

			this.socket_realtime.on('error', (err) => {
				debug('Network error', err);
				this.log('error', 'Network error: ' + err.message);
			});

			this.socket_realtime.on('connect', () => {
				debug('Connected');
				this.socket_realtime.send(this.null_packet);
			});

			this.socket_realtime.on('data', (buffer) => {
				this.socket_realtime.send(this.null_packet);

				if (!buffer.equals(this.null_packet) && !buffer.equals(this.null_packet_cmd)) {
					//console.log('Receive Realtime: ', buffer);
					let pos;
					let element;

					//3200
					if (this.config.modelID == 'se3200') {
						pos = buffer.indexOf('94000200', 0, "hex")
						if (pos > -1) {
							//console.log('PGM to', buffer[pos + 4]);
							this.pgm_in_src = buffer[pos + 4];
							this.checkFeedbacks('pgm_in');
							element = this.model.pgm.find(element => element.id === this.pgm_in_src.toString());
							if (element !== undefined) {
								this.setVariable('pgm_in', element.label);
							}
						}
						pos = buffer.indexOf('95000200', 0, "hex")
						if (pos > -1) {
							//console.log('PVW to', buffer[pos + 4]);
							this.pvw_in_src = buffer[pos + 4];
							this.checkFeedbacks('pvw_in');
							element = this.model.pvw.find(element => element.id === this.pvw_in_src.toString());
							if (element !== undefined) {
								this.setVariable('pvw_in', element.label);
							}
						}
					} else {
						//1200,700,650
						pos = buffer.indexOf('56000200', 0, "hex")
						if (pos > -1) {
							//console.log('PGM to', buffer[pos + 4]);
							this.pgm_in_src = buffer[pos + 4];
							this.checkFeedbacks('pgm_in');
							element = this.model.pgm.find(element => element.id === this.pgm_in_src.toString());
							if (element !== undefined) {
								this.setVariable('pgm_in', element.label);
							}

						}
						pos = buffer.indexOf('57000200', 0, "hex")
						if (pos > -1) {
							//console.log('PVW to', buffer[pos + 4]);
							this.pvw_in_src = buffer[pos + 4];
							this.checkFeedbacks('pvw_in');
							element = this.model.pvw.find(element => element.id === this.pvw_in_src.toString());
							if (element !== undefined) {
								this.setVariable('pvw_in', element.label);
							}
						}
						//key 1
						pos = buffer.indexOf('14000200', 0, "hex")
						if (pos > -1) {
							this.key1_in_src = buffer[pos + 4];
							this.checkFeedbacks('key1_in');
							element = this.model.key1.find(element => element.id === this.key1_in_src.toString());
							if (element !== undefined) {
								this.setVariable('key1_in', element.label);
							}
						}

						//key 2
						pos = buffer.indexOf('32000200', 0, "hex")
						if (pos > -1) {
							this.key2_in_src = buffer[pos + 4];
							this.checkFeedbacks('key2_in');
							element = this.model.key2.find(element => element.id === this.key2_in_src.toString());
							if (element !== undefined) {
								this.setVariable('key2_in', element.label);
							}
						}

						//dsk 1
						pos = buffer.indexOf('5c000200', 0, "hex")
						if (pos > -1) {
							this.dsk1_in_src = buffer[pos + 4];
							this.checkFeedbacks('dsk1_in');
							element = this.model.dsk1.find(element => element.id === this.dsk1_in_src.toString());
							if (element !== undefined) {
								this.setVariable('dsk1_in', element.label);
							}
						}
						//dsk 1
						pos = buffer.indexOf('6e000200', 0, "hex")
						if (pos > -1) {
							this.dsk2_in_src = buffer[pos + 4];
							this.checkFeedbacks('dsk2_in');
							element = this.model.dsk2.find(element => element.id === this.dsk2_in_src.toString());
							if (element !== undefined) {
								this.setVariable('dsk2_in', element.label);
							}
						}
					}
					pos = buffer.indexOf('14000200', 0, "hex")
					if (pos > -1) {
						//console.log('KEY 1 to', buffer[pos + 4]);
						this.key1_in_src = buffer[pos + 4];
						this.checkFeedbacks('key1_in');
					}
					pos = buffer.indexOf('32000200', 0, "hex")
					if (pos > -1) {

						this.key2_in_src = buffer[pos + 4];
						//console.log('KEY 2 to', buffer[pos + 4]);
						if (this.config.modelID != 'se700' && this.config.modelID != 'se650') {
							this.key2_in_src = buffer[pos + 4];
							this.checkFeedbacks('key2_in');
						} else {
							//console.log('PIP to', buffer[pos + 4]);
							this.pip_in_src = buffer[pos + 4];
							this.checkFeedbacks('pip_in');
						}
					}
					if (!this.config.modelID != 'se3200') {
						pos = buffer.indexOf('5c000200', 0, "hex")
						if (pos > -1) {
							//console.log('DSK 1 to', buffer[pos + 4]);
							this.dsk1_in_src = buffer[pos + 4];
							this.checkFeedbacks('dsk1_in');
						}
						pos = buffer.indexOf('6e000200', 0, "hex")
						if (pos > -1) {
							//console.log('DSK 2 to', buffer[pos + 4]);
							this.dsk2_in_src = buffer[pos + 4];
							this.checkFeedbacks('dsk2_in');
						}
					} else {
						//3200 dsk1
						pos = buffer.indexOf('9a000200', 0, "hex")
						if (pos > -1) {
							//console.log('DSK 1 to', buffer[pos + 4]);
							this.dsk1_in_src = buffer[pos + 4];
							this.checkFeedbacks('dsk1_in');
						}


						//3200 dsk2
						pos = buffer.indexOf('ac000200', 0, "hex")
						if (pos > -1) {
							//console.log('DSK 2 to', buffer[pos + 4]);
							this.dsk2_in_src = buffer[pos + 4];
							this.checkFeedbacks('dsk2_in');
						}

						//3200 KEY 3
						pos = buffer.indexOf('50000200', 0, "hex")
						if (pos > -1) {
							//console.log('KEY 3 to', buffer[pos + 4]);
							this.key3_in_src = buffer[pos + 4];
							this.checkFeedbacks('key3_in');
						}
						//3200 KEY 4
						pos = buffer.indexOf('6e000200', 0, "hex")
						if (pos > -1) {
							//console.log('KEY 4 to', buffer[pos + 4]);
							this.key4_in_src = buffer[pos + 4];
							this.checkFeedbacks('key4_in');
						}
						//3200 Aux1
						pos = buffer.indexOf('00000500', 0, "hex")
						if (pos > -1) {
							//console.log('AUX 1 to', buffer[pos + 4]);
							this.aux1_in_src = buffer[pos + 4];
							this.checkFeedbacks('aux1_in');
						}
						//3200 Aux2
						pos = buffer.indexOf('01000500', 0, "hex")
						if (pos > -1) {
							//console.log('AUX 2 to', buffer[pos + 4]);
							this.aux2_in_src = buffer[pos + 4];
							this.checkFeedbacks('aux2_in');
						}
						//3200 Aux3
						pos = buffer.indexOf('02000500', 0, "hex")
						if (pos > -1) {
							//console.log('AUX 3 to', buffer[pos + 4]);
							this.aux3_in_src = buffer[pos + 4];
							this.checkFeedbacks('aux3_in');
						}
						//3200 Aux4
						pos = buffer.indexOf('03000500', 0, "hex")
						if (pos > -1) {
							//console.log('AUX 4 to', buffer[pos + 4]);
							this.aux4_in_src = buffer[pos + 4];
							this.checkFeedbacks('aux4_in');
						}
					}

					//GET ME/DSK/FTB FRAME CA
					//GET ME/DSK/FTB FRAME CHANGEGS
					pos = buffer.indexOf('03000700', 0, "hex")
					if (pos > -1) {
						this.me_dur = buffer.readInt32LE(pos + 4);
						this.setVariable('me_dur', this.me_dur);
					}
					pos = buffer.indexOf('08000700', 0, "hex")
					if (pos > -1) {
						this.dsk_dur = buffer.readInt32LE(pos + 4);
						this.setVariable('dsk_dur', this.dsk_dur);
					}
					pos = buffer.indexOf('0d000700', 0, "hex")
					if (pos > -1) {
						this.ftb_dur = buffer.readInt32LE(pos + 4);
						this.setVariable('ftb_dur', this.ftb_dur);
					}
					//Key 1 State
					pos = buffer.indexOf('13000200', 0, "hex")
					if (pos > -1) {
						this.key1_pgm_state = buffer.readInt16LE(pos + 4);
						this.setVariable('key1_pgm_state', this.key1_pgm_state);
					}

					pos = buffer.indexOf('50000200', 0, "hex")
					if (pos > -1) {
						this.key1_pvw_state = buffer.readInt16LE(pos + 4);
						this.setVariable('key1_pvw_state', this.key1_pvw_state);
					}

					//Key 2 State
					pos = buffer.indexOf('31000200', 0, "hex")
					if (pos > -1) {
						this.key2_pgm_state = buffer.readInt16LE(pos + 4);
						this.setVariable('key2_pgm_state', this.key2_pgm_state);
					}

					pos = buffer.indexOf('51000200', 0, "hex")
					if (pos > -1) {
						this.key2_pvw_state = buffer.readInt16LE(pos + 4);
						this.setVariable('key2_pvw_state', this.key2_pvw_state);
					}

					//DSK 1 State
					pos = buffer.indexOf('5b000200', 0, "hex")
					if (pos > -1) {
						this.dsk1_pgm_state = buffer.readInt16LE(pos + 4);
						this.setVariable('dsk1_pgm_state', this.dsk1_pgm_state);
					}

					pos = buffer.indexOf('7f000200', 0, "hex")
					if (pos > -1) {
						this.dsk1_pvw_state = buffer.readInt16LE(pos + 4);
						this.setVariable('dsk1_pvw_state', this.dsk1_pvw_state);
					}

					//DSK 2 State
					pos = buffer.indexOf('6d000200', 0, "hex")
					if (pos > -1) {
						this.dsk2_pgm_state = buffer.readInt16LE(pos + 4);
						this.setVariable('dsk2_pgm_state', this.dsk2_pgm_state);
					}

					pos = buffer.indexOf('80000200', 0, "hex")
					if (pos > -1) {
						this.dsk2_pvw_state = buffer.readInt16LE(pos + 4);
						this.setVariable('dsk2_pvw_state', this.dsk2_pvw_state);
					}

				}
			});

			// if we get any data, display it to stdout
			this.socket.on('data', (buffer) => {
				//if (!buffer.equals(this.null_packet) && !buffer.equals(this.null_packet_cmd)) {
				//console.log('Receive CMD: ', buffer);
				//}
				//Reply with the null packet for the realtime protocol
				if (buffer.equals(this.null_packet_cmd)) {
					this.socket.send(this.null_packet_cmd);
				} else {
					this.socket.send(this.null_packet);
				}

			});

		}
	}


	updateConfig(config) {
		var resetConnection = false;

		if (this.config.host != config.host || this.config.port != config.port || this.config.modelID != config.modelID) {
			resetConnection = true;
		}

		this.config = config;
		this.model = this.CONFIG_MODEL[config.modelID];

		if (resetConnection === true || this.socket === undefined) {
			this.actions();
			this.init_variables();
			this.init_feedbacks();
			this.initTCP();
			this.init_presets();
			console.log('Connection reset after update. Port: ', config.port);
		}
	}

	init_feedbacks() {

		let feedbacks = {};
		feedbacks['pgm_in'] = {
			label: 'Color for PGM',
			description: 'Set Button colors for PGM Bus',
			options: [{
				type: 'colorpicker',
				label: 'Foreground color',
				id: 'fg',
				default: '16777215'
			},
			{
				type: 'colorpicker',
				label: 'Background color',
				id: 'bg',
				default: this.rgb(255, 0, 0),
			},
			{
				type: 'dropdown',
				label: 'Input',
				id: 'pgm_in',
				default: '0',
				choices: this.model.pgm
			}],
			callback: (feedback, bank) => {
				if (this.pgm_in_src == feedback.options.pgm_in) {
					return {
						color: feedback.options.fg,
						bgcolor: feedback.options.bg
					};
				}
			}
		}
		feedbacks['pvw_in'] = {
			label: 'Color for PVW',
			description: 'Set Button colors for PVW Bus',
			options: [{
				type: 'colorpicker',
				label: 'Foreground color',
				id: 'fg',
				default: '16777215'
			},
			{
				type: 'colorpicker',
				label: 'Background color',
				id: 'bg',
				default: this.rgb(51, 102, 0),
			},
			{
				type: 'dropdown',
				label: 'Input',
				id: 'pvw_in',
				default: '0',
				choices: this.model.pvw
			}],
			callback: (feedback, bank) => {
				if (this.pvw_in_src == feedback.options.pvw_in) {
					return {
						color: feedback.options.fg,
						bgcolor: feedback.options.bg
					};
				}
			}
		}
		feedbacks['key1_in'] = {
			label: 'Color for Key 1 Aux',
			description: 'Set Button colors for Key 1 Aux Bus',
			options: [{
				type: 'colorpicker',
				label: 'Foreground color',
				id: 'fg',
				default: '16777215'
			},
			{
				type: 'colorpicker',
				label: 'Background color',
				id: 'bg',
				default: this.rgb(51, 102, 0),
			},
			{
				type: 'dropdown',
				label: 'Input',
				id: 'key1_in',
				default: '0',
				choices: this.model.key1
			}],
			callback: (feedback, bank) => {
				if (this.key1_in_src == feedback.options.key1_in) {
					return {
						color: feedback.options.fg,
						bgcolor: feedback.options.bg
					};
				}
			}
		}
		if (this.config.modelID != 'se700' && this.config.modelID != 'se650') {
			feedbacks['key2_in'] = {
				label: 'Color for Key 2 Aux',
				description: 'Set Button colors for Key 2 Aux Bus',
				options: [{
					type: 'colorpicker',
					label: 'Foreground color',
					id: 'fg',
					default: '16777215'
				},
				{
					type: 'colorpicker',
					label: 'Background color',
					id: 'bg',
					default: this.rgb(51, 102, 0),
				},
				{
					type: 'dropdown',
					label: 'Input',
					id: 'key2_in',
					default: '0',
					choices: this.model.key2
				}],
				callback: (feedback, bank) => {
					if (this.key2_in_src == feedback.options.key2_in) {
						return {
							color: feedback.options.fg,
							bgcolor: feedback.options.bg
						};
					}
				}
			}
		} else {
			feedbacks['pip_in'] = {
				label: 'Color for PIP Aux',
				description: 'Set Button colors for PIP Aux Bus',
				options: [{
					type: 'colorpicker',
					label: 'Foreground color',
					id: 'fg',
					default: '16777215'
				},
				{
					type: 'colorpicker',
					label: 'Background color',
					id: 'bg',
					default: this.rgb(51, 102, 0),
				},
				{
					type: 'dropdown',
					label: 'Input',
					id: 'pip_in',
					default: '0',
					choices: this.model.pip
				}],
				callback: (feedback, bank) => {
					if (this.pip_in_src == feedback.options.pip_in) {
						return {
							color: feedback.options.fg,
							bgcolor: feedback.options.bg
						};
					}
				}
			}
		}

		if (this.config.modelID == 'se3200') {
			feedbacks['key3_in'] = {
				label: 'Color for Key 3 Aux',
				description: 'Set Button colors for Key 3 Aux Bus',
				options: [{
					type: 'colorpicker',
					label: 'Foreground color',
					id: 'fg',
					default: '16777215'
				},
				{
					type: 'colorpicker',
					label: 'Background color',
					id: 'bg',
					default: this.rgb(51, 102, 0),
				},
				{
					type: 'dropdown',
					label: 'Input',
					id: 'key3_in',
					default: '0',
					choices: this.model.key3
				}],
				callback: (feedback, bank) => {
					if (this.key3_in_src == feedback.options.key3_in) {
						return {
							color: feedback.options.fg,
							bgcolor: feedback.options.bg
						};
					}
				}
			}
			feedbacks['key4_in'] = {
				label: 'Color for Key 4 Aux',
				description: 'Set Button colors for Key 4 Aux Bus',
				options: [{
					type: 'colorpicker',
					label: 'Foreground color',
					id: 'fg',
					default: '16777215'
				},
				{
					type: 'colorpicker',
					label: 'Background color',
					id: 'bg',
					default: this.rgb(51, 102, 0),
				},
				{
					type: 'dropdown',
					label: 'Input',
					id: 'key4_in',
					default: '0',
					choices: this.model.key4
				}],
				callback: (feedback, bank) => {
					if (this.key4_in_src == feedback.options.key4_in) {
						return {
							color: feedback.options.fg,
							bgcolor: feedback.options.bg
						};
					}
				}
			}

			feedbacks['aux1_in'] = {
				label: 'Color for Aux 1 Bus',
				description: 'Set Button colors for Aux 1 Bus',
				options: [{
					type: 'colorpicker',
					label: 'Foreground color',
					id: 'fg',
					default: '16777215'
				},
				{
					type: 'colorpicker',
					label: 'Background color',
					id: 'bg',
					default: this.rgb(51, 102, 0),
				},
				{
					type: 'dropdown',
					label: 'Input',
					id: 'aux1_in',
					default: '0',
					choices: this.model.aux1
				}],
				callback: (feedback, bank) => {
					if (this.aux1_in_src == feedback.options.aux1_in) {
						return {
							color: feedback.options.fg,
							bgcolor: feedback.options.bg
						};
					}
				}
			}

			feedbacks['aux2_in'] = {
				label: 'Color for Aux 2 Bus',
				description: 'Set Button colors for Aux 2 Bus',
				options: [{
					type: 'colorpicker',
					label: 'Foreground color',
					id: 'fg',
					default: '16777215'
				},
				{
					type: 'colorpicker',
					label: 'Background color',
					id: 'bg',
					default: this.rgb(51, 102, 0),
				},
				{
					type: 'dropdown',
					label: 'Input',
					id: 'aux2_in',
					default: '0',
					choices: this.model.aux2
				}],
				callback: (feedback, bank) => {
					if (this.aux2_in_src == feedback.options.aux2_in) {
						return {
							color: feedback.options.fg,
							bgcolor: feedback.options.bg
						};
					}
				}
			}
			feedbacks['aux3_in'] = {
				label: 'Color for Aux 3 Bus',
				description: 'Set Button colors for Aux 3 Bus',
				options: [{
					type: 'colorpicker',
					label: 'Foreground color',
					id: 'fg',
					default: '16777215'
				},
				{
					type: 'colorpicker',
					label: 'Background color',
					id: 'bg',
					default: this.rgb(51, 102, 0),
				},
				{
					type: 'dropdown',
					label: 'Input',
					id: 'aux3_in',
					default: '0',
					choices: this.model.aux1
				}],
				callback: (feedback, bank) => {
					if (this.aux3_in_src == feedback.options.aux3_in) {
						return {
							color: feedback.options.fg,
							bgcolor: feedback.options.bg
						};
					}
				}
			}

			feedbacks['aux4_in'] = {
				label: 'Color for Aux 4 Bus',
				description: 'Set Button colors for Aux 4 Bus',
				options: [{
					type: 'colorpicker',
					label: 'Foreground color',
					id: 'fg',
					default: '16777215'
				},
				{
					type: 'colorpicker',
					label: 'Background color',
					id: 'bg',
					default: this.rgb(51, 102, 0),
				},
				{
					type: 'dropdown',
					label: 'Input',
					id: 'aux4_in',
					default: '0',
					choices: this.model.aux1
				}],
				callback: (feedback, bank) => {
					if (this.aux4_in_src == feedback.options.aux4_in) {
						return {
							color: feedback.options.fg,
							bgcolor: feedback.options.bg
						};
					}
				}
			}
		}
		feedbacks['dsk1_in'] = {
			label: 'Color for DSK1 Aux',
			description: 'Set Button colors for DSK 1 Aux Bus',
			options: [{
				type: 'colorpicker',
				label: 'Foreground color',
				id: 'fg',
				default: '16777215'
			},
			{
				type: 'colorpicker',
				label: 'Background color',
				id: 'bg',
				default: this.rgb(51, 102, 0),
			},
			{
				type: 'dropdown',
				label: 'Input',
				id: 'dsk1_in',
				default: '0',
				choices: this.model.dsk1
			}],
			callback: (feedback, bank) => {
				if (this.dsk1_in_src == feedback.options.dsk1_in) {
					return {
						color: feedback.options.fg,
						bgcolor: feedback.options.bg
					};
				}
			}
		}
		if (this.config.modelID != 'se700' && this.config.modelID != 'se650') {
			feedbacks['dsk2_in'] = {
				label: 'Color for DSK2 Aux',
				description: 'Set Button colors for DSK 2 Aux Bus',
				options: [{
					type: 'colorpicker',
					label: 'Foreground color',
					id: 'fg',
					default: '16777215'
				},
				{
					type: 'colorpicker',
					label: 'Background color',
					id: 'bg',
					default: this.rgb(51, 102, 0),
				},
				{
					type: 'dropdown',
					label: 'Input',
					id: 'dsk2_in',
					default: '0',
					choices: this.model.dsk2
				}],
				callback: (feedback, bank) => {
					if (this.dsk2_in_src == feedback.options.dsk2_in) {
						return {
							color: feedback.options.fg,
							bgcolor: feedback.options.bg
						};
					}
				}
			}
		}


		this.setFeedbackDefinitions(feedbacks);

	};

	init_presets() {
		var presets = [

			{
				category: 'pgm-bus',
				label: 'PGM Bus',
				bank: {
					style: 'text',
					text: 'In 1',
					size: '18',
					color: this.rgb(255, 255, 255),
					bgcolor: this.rgb(0, 0, 0),

				},
				actions: [
					{
						action: 'switch_pgm',
						options: {
							switchpgm: '1'
						}
					}
				],
				feedbacks: [
					{
						type: 'pgm_in',
						options: {
							pgm_in: '1'
						}
					}
				],
			},
			{
				category: 'pvw-bus',
				label: 'PVW Bus',
				bank: {
					style: 'text',
					text: 'In 1',
					size: '18',
					color: this.rgb(255, 255, 255),
					bgcolor: this.rgb(0, 0, 0),

				},
				actions: [
					{
						action: 'switch_pvw',
						options: {
							switchpvw: '1'
						}
					}
				],
				feedbacks: [
					{
						type: 'pvw_in',
						options: {
							pvw_in: '1'
						}
					}
				],
			}

		];

		this.setPresetDefinitions(presets);
	}
	init_variables() {
		var self = this;

		var variables = [
			{
				label: 'Current PGM bus input name',
				name: 'pgm_in'
			},
			{
				label: 'Current PVW bus input name',
				name: 'pvw_in'
			},
			{
				label: 'Current Key 1 bus input name',
				name: 'key1_in'
			},
			{
				label: 'Current Key 2 bus input name',
				name: 'key2_in'
			},
			{
				label: 'Current DSK 1 bus input name',
				name: 'dsk1_in'
			},
			{
				label: 'Current DSK 2 bus input name',
				name: 'dsk2_in'
			},
			{
				label: 'Current ME Duration in Frames',
				name: 'me_dur'
			},
			{
				label: 'Current DSK Duration in Frames',
				name: 'dsk_dur'
			},
			{
				label: 'Current FTB Duration in Frames',
				name: 'ftb_dur'
			},
			{
				label: 'Current Key 1 PGM state',
				name: 'key1_pgm_state'
			},
			{
				label: 'Current Key 1 PVW state',
				name: 'key1_pvw_state'
			},
			{
				label: 'Current Key 2 PGM state',
				name: 'key2_pgm_state'
			},
			{
				label: 'Current Key 2 PVW state',
				name: 'key2_pvw_state'
			},
			{
				label: 'Current DSK 1 PGM state',
				name: 'dsk1_pgm_state'
			},
			{
				label: 'Current DSK 1 PVW state',
				name: 'dsk1_pvw_state'
			},
			{
				label: 'Current DSK 2 PGM state',
				name: 'dsk2_pgm_state'
			},
			{
				label: 'Current DSK 2 PVW state',
				name: 'dsk2_pvw_state'
			},

		];

		this.setVariableDefinitions(variables);
	};

}


exports = module.exports = instance;
